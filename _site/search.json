[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "EDLD 651: Introduction to Data Science with R",
    "section": "",
    "text": "This is the first course in a sequence of courses on educational data science that will lead to a [Data Science Specialization in Educational Leadership](https://education.uoregon.edu/data-science-specialization-educational-leadership). All courses will be taught through [`R`](https://cran.r-project.org/), a free and open-source statistical computing environment. This course focuses on introductory programming with ` R` and [RStudio](https://posit.co/products/open-source/rstudio/), basic data wrangling and visualization with the [`{tidyverse}`](https://www.tidyverse.org/) suite of packages, version control with [git](https://git-scm.com/) and [GitHub](https://github.com/), and dynamic and reproducible workflows with [quarto](https://quarto.org/)."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "homeworks/hw1.html",
    "href": "homeworks/hw1.html",
    "title": "Homework 1",
    "section": "",
    "text": "Loading Packages\nThe code chunk below loads the {tidyverse} package. Please also load {here}, {rio}, and {janitor}. If you get errors, you probably don’t have one of the packages installed yet, so run install.packages(\"package_name\") in the console first.\n\nlibrary(tidyverse)\n\nNote that you should get some messages printed out below that state all the packages that have been loaded. This is important to pay attention to. It says that both {ggplot2} and {dplyr} have been loaded, so you don’t need explicit calls to those packages.\n\n\nRead in the data\nUse the code chunk below to:\n\nRead in sesame13.sav using {here} and {rio}\nRead in star.csv using {here} and {readr}\nApply the clean_names() function to both\nSave each dataset as a separate object\n\n\n\n\n\n\n{ggplot2} Peek\nMany packages also include data. We’ll focus here on the mpg dataset, which comes from {ggplot2}. Run the following code to produce a scatterplot\n\nggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_point()\n\n\n\n\n\n\nHelp documentation\nLook at the help documentation for geom_point(). Use the help documentation to change the color of the points to “gray70”. Start getting in the habit of running code within a code chunk rather than in the text/prose areas.\nIn the code chunk below create a second scatterplot with the mpg dataset, this time with the number of cylinders displayed on the x-axis and the city miles per gallon on the y-axis. Also change the color of the points to “gray70”.\n\n\n\n\n\nInspecting Data\nThe diamonds dataset is also included with ggplot2. The code below will show the first six rows of the dataset.\n\nhead(diamonds)\n\n# A tibble: 6 × 10\n  carat cut       color clarity depth table price     x     y     z\n  <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43\n2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31\n3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31\n4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63\n5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75\n6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48\n\n\nLook at the help documentation and then use the code below to change the number of rows shown to 15.\n\nhead(diamonds, )\n\n# A tibble: 6 × 10\n  carat cut       color clarity depth table price     x     y     z\n  <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43\n2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31\n3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31\n4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63\n5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75\n6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48\n\n\nCall a similar function that shows the last six rows of the dataset. (Note you may need to look at the same help documentation.)\n\n\n\nUse any function you want to determine the dimensions of the dataset - i.e., the number of rows and columns.\n\n\n\nUse the pipe operator, %>%, along with the count() function, to count the rows of each diamond color.\n\n\n\nWrite the same code as above, but this time use count() without the pipe operator\n\n\n\nBe sure to add your name to the top of the document (line 2, in the YAML).\nClick the Render button near the top, and turn in both the quarto document and the output (.html file) to Canvas."
  },
  {
    "objectID": "homeworks/hw1-key.html",
    "href": "homeworks/hw1-key.html",
    "title": "Homework 1",
    "section": "",
    "text": "Loading Packages\nThe code chunk below loads the {tidyverse} package. Please also load {here}, {rio}, and {janitor}. If you get errors, you probably don’t have one of the packages installed yet, so run install.packages(\"package_name\") in the console first.\n\nlibrary(tidyverse)\nlibrary(here)\nlibrary(rio)\nlibrary(janitor)\n\nNote that you should get some messages printed out below that state all the packages that have been loaded. This is important to pay attention to. It says that both {ggplot2} and {dplyr} have been loaded, so you don’t need explicit calls to those packages.\n\n\nRead in the data\nUse the code chunk below to:\n\nRead in sesame13.sav using {here} and {rio}\nRead in star.csv using {here} and {readr}\nApply the clean_names() function to both\nSave each dataset as a separate object\n\n\nsesame <- import(here(\"data\", \"sesame13.sav\"))\n\nstar <- read_csv(here(\"data\", \"star.csv\"))\n\n\n\n{ggplot2} Peek\nMany packages also include data. We’ll focus here on the mpg dataset, which comes from {ggplot2}. Run the following code to produce a scatterplot\n\nggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_point()\n\n\n\n\n\n\nHelp documentation\nLook at the help documentation for geom_point(). Use the help documentation to change the color of the points to “gray70”. Start getting in the habit of running code within a code chunk rather than in the text/prose areas.\nIn the code chunk below create a second scatterplot with the mpg dataset, this time with the number of cylinders displayed on the x-axis and the city miles per gallon on the y-axis. Also change the color of the points to “gray70”.\n\n#?geom_point\n\nggplot(mpg, aes(x = cyl, y = cty)) +\n  geom_point(color = \"gray70\")\n\n\n\n\n\n\nInspecting Data\nThe diamonds dataset is also included with ggplot2. The code below will show the first six rows of the dataset.\n\nhead(diamonds)\n\n# A tibble: 6 × 10\n  carat cut       color clarity depth table price     x     y     z\n  <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43\n2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31\n3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31\n4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63\n5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75\n6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48\n\n\nLook at the help documentation and then use the code below to change the number of rows shown to 15.\n\nhead(diamonds, 15)\n\n# A tibble: 15 × 10\n   carat cut       color clarity depth table price     x     y     z\n   <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n 1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43\n 2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31\n 3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31\n 4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63\n 5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75\n 6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48\n 7  0.24 Very Good I     VVS1     62.3    57   336  3.95  3.98  2.47\n 8  0.26 Very Good H     SI1      61.9    55   337  4.07  4.11  2.53\n 9  0.22 Fair      E     VS2      65.1    61   337  3.87  3.78  2.49\n10  0.23 Very Good H     VS1      59.4    61   338  4     4.05  2.39\n11  0.3  Good      J     SI1      64      55   339  4.25  4.28  2.73\n12  0.23 Ideal     J     VS1      62.8    56   340  3.93  3.9   2.46\n13  0.22 Premium   F     SI1      60.4    61   342  3.88  3.84  2.33\n14  0.31 Ideal     J     SI2      62.2    54   344  4.35  4.37  2.71\n15  0.2  Premium   E     SI2      60.2    62   345  3.79  3.75  2.27\n\n\nCall a similar function that shows the last six rows of the dataset. (Note you may need to look at the same help documentation.)\n\ntail(diamonds)\n\n# A tibble: 6 × 10\n  carat cut       color clarity depth table price     x     y     z\n  <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n1  0.72 Premium   D     SI1      62.7    59  2757  5.69  5.73  3.58\n2  0.72 Ideal     D     SI1      60.8    57  2757  5.75  5.76  3.5 \n3  0.72 Good      D     SI1      63.1    55  2757  5.69  5.75  3.61\n4  0.7  Very Good D     SI1      62.8    60  2757  5.66  5.68  3.56\n5  0.86 Premium   H     SI2      61      58  2757  6.15  6.12  3.74\n6  0.75 Ideal     D     SI2      62.2    55  2757  5.83  5.87  3.64\n\n\nUse any function you want to determine the dimensions of the dataset - i.e., the number of rows and columns.\n\nstr(diamonds)\n\ntibble [53,940 × 10] (S3: tbl_df/tbl/data.frame)\n $ carat  : num [1:53940] 0.23 0.21 0.23 0.29 0.31 0.24 0.24 0.26 0.22 0.23 ...\n $ cut    : Ord.factor w/ 5 levels \"Fair\"<\"Good\"<..: 5 4 2 4 2 3 3 3 1 3 ...\n $ color  : Ord.factor w/ 7 levels \"D\"<\"E\"<\"F\"<\"G\"<..: 2 2 2 6 7 7 6 5 2 5 ...\n $ clarity: Ord.factor w/ 8 levels \"I1\"<\"SI2\"<\"SI1\"<..: 2 3 5 4 2 6 7 3 4 5 ...\n $ depth  : num [1:53940] 61.5 59.8 56.9 62.4 63.3 62.8 62.3 61.9 65.1 59.4 ...\n $ table  : num [1:53940] 55 61 65 58 58 57 57 55 61 61 ...\n $ price  : int [1:53940] 326 326 327 334 335 336 336 337 337 338 ...\n $ x      : num [1:53940] 3.95 3.89 4.05 4.2 4.34 3.94 3.95 4.07 3.87 4 ...\n $ y      : num [1:53940] 3.98 3.84 4.07 4.23 4.35 3.96 3.98 4.11 3.78 4.05 ...\n $ z      : num [1:53940] 2.43 2.31 2.31 2.63 2.75 2.48 2.47 2.53 2.49 2.39 ...\n\ndiamonds\n\n# A tibble: 53,940 × 10\n   carat cut       color clarity depth table price     x     y     z\n   <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n 1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43\n 2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31\n 3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31\n 4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63\n 5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75\n 6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48\n 7  0.24 Very Good I     VVS1     62.3    57   336  3.95  3.98  2.47\n 8  0.26 Very Good H     SI1      61.9    55   337  4.07  4.11  2.53\n 9  0.22 Fair      E     VS2      65.1    61   337  3.87  3.78  2.49\n10  0.23 Very Good H     VS1      59.4    61   338  4     4.05  2.39\n# ℹ 53,930 more rows\n\nnrow(diamonds)\n\n[1] 53940\n\nncol(diamonds)\n\n[1] 10\n\ndim(diamonds)\n\n[1] 53940    10\n\n\nUse the pipe operator, %>%, along with the count() function, to count the rows of each diamond color.\n\ndiamonds %>%\n  count(color) \n\n# A tibble: 7 × 2\n  color     n\n  <ord> <int>\n1 D      6775\n2 E      9797\n3 F      9542\n4 G     11292\n5 H      8304\n6 I      5422\n7 J      2808\n\n\nWrite the same code as above, but this time use count() without the pipe operator\n\ncount(diamonds, color) \n\n# A tibble: 7 × 2\n  color     n\n  <ord> <int>\n1 D      6775\n2 E      9797\n3 F      9542\n4 G     11292\n5 H      8304\n6 I      5422\n7 J      2808\n\n\nBe sure to add your name to the top of the document (line 2, in the YAML).\nClick the Render button near the top, and turn in both the quarto document and the output (.html file) to Canvas."
  },
  {
    "objectID": "homeworks/hw3.html",
    "href": "homeworks/hw3.html",
    "title": "Homework 3",
    "section": "",
    "text": "Comment out line 32 after you run it, but putting a # at the start of the line.\n\n\nstr(gss_cat)\nView(gss_cat)\n?gss_cat\n\n\nUse {ggplot2} to create a histogram of tvhours. The plot should:\n\n\nInclude a small amount of transparency so grid lines are visible under the histogram.\nBe a different color than the default\nInclude meaningful axis labels\nHave a title and a subtitle\n\n\n\n\n\nCreate a ridgeline density plot of age by partyid. Do you notice any strong differences by party affiliation?\n\n\n\n\n\nModify the plot from Question 4 to produce separate ridgeline densities by race within one plot. Do you see any patterns?\n\n\n\n\n\nReplicate the plots from Questions 4 and 5, but this time displaying the relations with boxplots (i.e., one boxplot from Question 4 and one boxplot for Question 5 in the chunk below). Try using coord_flip. Which do you think displays the relation more clearly? Why?\n\n\n\n\n\nRun the following lines of code to get a correlation table as a data frame.\n\n\ncor_tbl <- Hitters %>% \n  select_if(is.numeric) %>% \n  cor(use = \"pairwise.complete.obs\") %>% \n  as.data.frame() %>% \n  mutate(row = row.names(.)) %>% \n  gather(col, cor, -row) %>% \n  tbl_df()\n\nUse the correlation table to create a heatmap using geom_tile. Change the colors to one of the four viridis palettes. What does the heatmap help you see?\n\n\n\n\nThe code in the “barplot1” chunk below will produce a barplot.\n\n\nggplot(gss_cat, aes(rincome)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n\n\n\nUse the code below to create a new data set - gss_cat_new - that redefines the rincome variable so that Not applicable is displayed first, followed by No answer, Don’t know, Refused, and then each income category from lowest to highest. Once you’ve redefined the factor variable, re-produce the plot above by running the ggplot code at the bottom of the chunk. The plot should have Not applicable closest to the y-axis, then No answer, Don’t know, etc.\n\ngss_cat_new <- gss_cat %>% \n  mutate(rincome = factor(rincome, levels = c()))"
  },
  {
    "objectID": "homeworks/hw3-key.html",
    "href": "homeworks/hw3-key.html",
    "title": "Homework 3",
    "section": "",
    "text": "Comment out line 32 after you run it, but putting a # at the start of the line.\n\n\nstr(gss_cat)\nView(gss_cat)\n?gss_cat\n\n\nUse {ggplot2} to create a histogram of tvhours. The plot should:\n\n\nInclude a small amount of transparency so grid lines are visible under the histogram.\nBe a different color than the default\nInclude meaningful axis labels\nHave a title and a subtitle\n\n\ntheme_set(theme_minimal())\n\nggplot(gss_cat, aes(tvhours)) +\n  geom_histogram(fill = \"cornflowerblue\", \n                 alpha = 0.7) +\n  labs(x = \"Number of Hours Watching Television\",\n       y = \"Number of Observations\",\n       title = \"Distribution of Television Watching\",\n       subtitle = \"Data from the General Social Survey (http://gss.norc.org)\")\n\n\n\n\n\nCreate a ridgeline density plot of age by partyid. Do you notice any strong differences by party affiliation?\n\n\nggplot(gss_cat, aes(age, partyid)) +\n  geom_density_ridges(fill = \"cornflowerblue\", alpha = 0.4)\n\n\n\n\n\nModify the plot from Question 4 to produce separate ridgeline densities by race within one plot. Do you see any patterns?\n\n\nggplot(gss_cat, aes(age, partyid)) +\n  geom_density_ridges(aes(fill = race), alpha = 0.4)\n\n\n\n\n\nReplicate the plots from Questions 4 and 5, but this time displaying the relations with boxplots (i.e., one boxplot from Question 4 and one boxplot for Question 5 in the chunk below). Try using coord_flip. Which do you think displays the relation more clearly? Why?\n\n\nggplot(gss_cat, aes(partyid, age)) +\n  geom_boxplot(fill = \"cornflowerblue\") +\n  coord_flip()\n\n\n\nggplot(gss_cat, aes(partyid, age)) +\n  geom_boxplot(aes(fill = race), alpha = 0.4) +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n\n\n\n\nRun the following lines of code to get a correlation table as a data frame.\n\n\ncor_tbl <- Hitters %>% \n  select_if(is.numeric) %>% \n  cor(use = \"pairwise.complete.obs\") %>% \n  as.data.frame() %>% \n  mutate(row = row.names(.)) %>% \n  gather(col, cor, -row) %>% \n  tbl_df()\n\nUse the correlation table to create a heatmap using geom_tile. Change the colors to one of the four viridis palettes. What does the heatmap help you see?\n\nggplot(cor_tbl, aes(row, col, fill = cor)) +\n  geom_tile() +\n  scale_fill_viridis_c(option = \"inferno\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n\n\n\n\nThe code in the “barplot1” chunk below will produce a barplot.\n\n\nggplot(gss_cat, aes(rincome)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n\n\n\nUse the code below to create a new data set - gss_cat_new - that redefines the rincome variable so that Not applicable is displayed first, followed by No answer, Don’t know, Refused, and then each income category from lowest to highest. Once you’ve redefined the factor variable, re-produce the plot above by running the ggplot code at the bottom of the chunk. The plot should have Not applicable closest to the y-axis, then No answer, Don’t know, etc.\n\ngss_cat_new <- gss_cat %>% \n  mutate(rincome = factor(rincome, levels = c(\"Not applicable\",\n                                              \"No answer\",\n                                              \"Don't know\",\n                                              \"Refused\",\n                                              \"Lt $1000\",\n                                              \"$1000 to 2999\",\n                                              \"$3000 to 3999\",\n                                              \"$4000 to 4999\",\n                                              \"$5000 to 5999\",\n                                              \"$6000 to 6999\",\n                                              \"$7000 to 7999\",\n                                              \"$8000 to 9999\",\n                                              \"$10000 - 14999\",\n                                              \"$15000 - 19999\",\n                                              \"$20000 - 24999\",\n                                              \"$25000 or more\")))\nggplot(gss_cat_new, aes(rincome)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))"
  },
  {
    "objectID": "homeworks/hw4-key.html",
    "href": "homeworks/hw4-key.html",
    "title": "Homework 4",
    "section": "",
    "text": "Part 1\nInstall and load the package {Lahman}, which will give you access to the Teams data.\n\n\nCode\n#install.packages(\"Lahman\")\nlibrary(rio)\nlibrary(here)\nlibrary(tidyverse)\nlibrary(Lahman)\nlibrary(janitor)\n\n\n\n1. Produce a subset of the data (as a new object) that has the following characteristics:\n\nonly one team (your choice)\n(try to you select a team that is currently still around, or it probably won’t be interesting; see a list of current at http://www.espn.com/mlb/teams).\ndata from 1980 to present (or as current as the dataset allows)\nincludes 5 columns: name, yearID, W, L, R, RA. These 5 variables correspond to the team name, the year, wins, losses, runs scored, and runs allowed).\n\n\n\nCode\nteams <- Teams %>% \n  janitor::clean_names()\n\ncubs <- teams %>% \n    filter(name == \"Chicago Cubs\" & year_id >= 1980) %>% # Only one team (your choice) & data from 1980 to present\n    select(name, year_id, w, l, r, ra) #Includes 5 columns: name, yearID, W, L, R, RA\n\n\n# Create a new variable corresponding to the winning percentage for the team you chose over time\ncubs <- cubs %>% \n    mutate(w_pct = w / (w + l))\n\n\n\n\n2. Create a new variable corresponding to the winning percentage for the team you chose over time:\n\\[w_{pct} = \\frac{wins}{wins + losses}\\] * Order by winning percentage: Least to greatest * Order by winning percentage: Greatest to least * Compute the mean and standard deviation of winning percentage\n\n\nCode\n# Order by winning percentage: Least to greatest\ncubs %>% \n  arrange(w_pct)\n\n\n           name year_id   w   l   r  ra     w_pct\n1  Chicago Cubs    1981  38  65 370 483 0.3689320\n2  Chicago Cubs    2012  61 101 613 759 0.3765432\n3  Chicago Cubs    1980  64  98 614 728 0.3950617\n4  Chicago Cubs    2000  65  97 764 904 0.4012346\n5  Chicago Cubs    2006  66  96 716 834 0.4074074\n6  Chicago Cubs    2013  66  96 602 689 0.4074074\n7  Chicago Cubs    1999  67  95 747 920 0.4135802\n8  Chicago Cubs    2002  67  95 706 759 0.4135802\n9  Chicago Cubs    1997  68  94 687 759 0.4197531\n10 Chicago Cubs    1994  49  64 500 549 0.4336283\n11 Chicago Cubs    1986  70  90 680 781 0.4375000\n12 Chicago Cubs    1983  71  91 701 719 0.4382716\n13 Chicago Cubs    2011  71  91 654 756 0.4382716\n14 Chicago Cubs    2021  71  91 705 839 0.4382716\n15 Chicago Cubs    1982  73  89 676 709 0.4506173\n16 Chicago Cubs    2014  73  89 614 707 0.4506173\n17 Chicago Cubs    2022  74  88 657 731 0.4567901\n18 Chicago Cubs    2010  75  87 685 767 0.4629630\n19 Chicago Cubs    1996  76  86 772 771 0.4691358\n20 Chicago Cubs    1987  76  85 720 801 0.4720497\n21 Chicago Cubs    1988  77  85 660 694 0.4753086\n22 Chicago Cubs    1990  77  85 690 774 0.4753086\n23 Chicago Cubs    1985  77  84 686 729 0.4782609\n24 Chicago Cubs    1991  77  83 695 734 0.4812500\n25 Chicago Cubs    1992  78  84 593 624 0.4814815\n26 Chicago Cubs    2005  79  83 703 714 0.4876543\n27 Chicago Cubs    1995  73  71 693 671 0.5069444\n28 Chicago Cubs    2009  83  78 707 672 0.5155280\n29 Chicago Cubs    1993  84  78 738 739 0.5185185\n30 Chicago Cubs    2019  84  78 814 717 0.5185185\n31 Chicago Cubs    2007  85  77 752 690 0.5246914\n32 Chicago Cubs    2001  88  74 777 701 0.5432099\n33 Chicago Cubs    2003  88  74 724 683 0.5432099\n34 Chicago Cubs    2004  89  73 789 665 0.5493827\n35 Chicago Cubs    1998  90  73 831 792 0.5521472\n36 Chicago Cubs    2020  34  26 265 240 0.5666667\n37 Chicago Cubs    2017  92  70 822 695 0.5679012\n38 Chicago Cubs    1989  93  69 702 623 0.5740741\n39 Chicago Cubs    2018  95  68 761 645 0.5828221\n40 Chicago Cubs    1984  96  65 762 658 0.5962733\n41 Chicago Cubs    2015  97  65 689 608 0.5987654\n42 Chicago Cubs    2008  97  64 855 671 0.6024845\n43 Chicago Cubs    2016 103  58 808 556 0.6397516\n\n\nCode\n# Order by winning percentage: greatest to least\ncubs %>% \n  arrange(desc(w_pct))\n\n\n           name year_id   w   l   r  ra     w_pct\n1  Chicago Cubs    2016 103  58 808 556 0.6397516\n2  Chicago Cubs    2008  97  64 855 671 0.6024845\n3  Chicago Cubs    2015  97  65 689 608 0.5987654\n4  Chicago Cubs    1984  96  65 762 658 0.5962733\n5  Chicago Cubs    2018  95  68 761 645 0.5828221\n6  Chicago Cubs    1989  93  69 702 623 0.5740741\n7  Chicago Cubs    2017  92  70 822 695 0.5679012\n8  Chicago Cubs    2020  34  26 265 240 0.5666667\n9  Chicago Cubs    1998  90  73 831 792 0.5521472\n10 Chicago Cubs    2004  89  73 789 665 0.5493827\n11 Chicago Cubs    2001  88  74 777 701 0.5432099\n12 Chicago Cubs    2003  88  74 724 683 0.5432099\n13 Chicago Cubs    2007  85  77 752 690 0.5246914\n14 Chicago Cubs    1993  84  78 738 739 0.5185185\n15 Chicago Cubs    2019  84  78 814 717 0.5185185\n16 Chicago Cubs    2009  83  78 707 672 0.5155280\n17 Chicago Cubs    1995  73  71 693 671 0.5069444\n18 Chicago Cubs    2005  79  83 703 714 0.4876543\n19 Chicago Cubs    1992  78  84 593 624 0.4814815\n20 Chicago Cubs    1991  77  83 695 734 0.4812500\n21 Chicago Cubs    1985  77  84 686 729 0.4782609\n22 Chicago Cubs    1988  77  85 660 694 0.4753086\n23 Chicago Cubs    1990  77  85 690 774 0.4753086\n24 Chicago Cubs    1987  76  85 720 801 0.4720497\n25 Chicago Cubs    1996  76  86 772 771 0.4691358\n26 Chicago Cubs    2010  75  87 685 767 0.4629630\n27 Chicago Cubs    2022  74  88 657 731 0.4567901\n28 Chicago Cubs    1982  73  89 676 709 0.4506173\n29 Chicago Cubs    2014  73  89 614 707 0.4506173\n30 Chicago Cubs    1983  71  91 701 719 0.4382716\n31 Chicago Cubs    2011  71  91 654 756 0.4382716\n32 Chicago Cubs    2021  71  91 705 839 0.4382716\n33 Chicago Cubs    1986  70  90 680 781 0.4375000\n34 Chicago Cubs    1994  49  64 500 549 0.4336283\n35 Chicago Cubs    1997  68  94 687 759 0.4197531\n36 Chicago Cubs    1999  67  95 747 920 0.4135802\n37 Chicago Cubs    2002  67  95 706 759 0.4135802\n38 Chicago Cubs    2006  66  96 716 834 0.4074074\n39 Chicago Cubs    2013  66  96 602 689 0.4074074\n40 Chicago Cubs    2000  65  97 764 904 0.4012346\n41 Chicago Cubs    1980  64  98 614 728 0.3950617\n42 Chicago Cubs    2012  61 101 613 759 0.3765432\n43 Chicago Cubs    1981  38  65 370 483 0.3689320\n\n\nCode\n# Compute the mean and standard deviation of winning percentage\ncubs %>% \n  summarize(mean_winning_pct = mean(w_pct),\n            sd_winning_pct = sd(w_pct))\n\n\n  mean_winning_pct sd_winning_pct\n1        0.4867853     0.06853359\n\n\n\n\n3. With the full Teams data:\n\nCompute the mean and standard deviation of winning percentage for each team\nOrder by winning percentage, greatest to least\n\n\n\nCode\nteams %>% \n  mutate(w_pct = w / (w + l)) %>% # FIRST - compute the winning percentage\n  group_by(name) %>% \n  summarize(n = n(),\n            mean_winning_pct = mean(w_pct, na.rm = TRUE), # compute the average winning percentage for each team\n            sd_winning_pct = sd(w_pct, na.rm = TRUE)) %>% # compute the standard deviation of winning percentage for each team\n  arrange(desc(mean_winning_pct)) # Order by highest winning percentage\n\n\n# A tibble: 140 × 4\n   name                         n mean_winning_pct sd_winning_pct\n   <chr>                    <int>            <dbl>          <dbl>\n 1 Boston Red Stockings         5            0.773         0.0911\n 2 Cincinnati Outlaw Reds       1            0.657        NA     \n 3 Boston Reds                  3            0.616         0.0790\n 4 Providence Grays             8            0.609         0.0855\n 5 Chicago White Stockings     17            0.609         0.117 \n 6 Cincinnati Red Stockings     8            0.589         0.0640\n 7 Boston Red Caps              7            0.579         0.0976\n 8 New York Yankees           110            0.577         0.0685\n 9 Brooklyn Ward's Wonders      1            0.576        NA     \n10 Philadelphia Whites          3            0.574         0.0934\n# ℹ 130 more rows\n\n\n\n\n4. Use the full data to reproduce the plot below\n\n\nCode\n# Please put the code for the plot in this chunk.\nteams %>% \n  as_tibble() %>% \n  mutate(w_pct = w / (w + l)) %>% \n  filter(name == \"New York Yankees\" |\n         name == \"Detroit Tigers\" |\n         name == \"San Diego Padres\") %>% \n  ggplot(aes(year_id, w_pct)) + \n  geom_line(aes(color = name)) +\n  theme_minimal() +\n  labs(\n    color = \"Team\"\n  )\n\n\n\n\n\n\n\n\nPart 2\n\n1. Read in the following three datasets, using {here} and the package of your choice ({rio}, {readr}, {haven}, {readxl})\n\nsesame13.sav\nstar.csv\nais.xlsx\n\nHint: For the ais.xlsx data, look at the skip argument within the {readxl} help documentation.\n\n\nCode\nsesame <- import(here(\"data\", \"sesame13.sav\"))\nstar <- import(here(\"data\", \"star.csv\"))\nais <- import(here(\"data\", \"ais.xlsx\"), skip = 15)\n\n\n\n\n2. Using the ais data, compute the average red blood cell count and average bmi by sport. Output these data as SPSS and EXCEL files.\n\n\nCode\nsmry <- ais %>% \n  group_by(sport) %>% \n  summarize(mean_rcc = mean(rcc),\n            mean_bmi = mean(bmi))\n\nexport(smry, \"summary_measures.sav\")\nexport(smry, \"summary_measures.xlsx\")\n\n\n\n\n3. Use the sesame data to answer the following question: Was the average female age higher in schools or at home?\n\n\nCode\nsesame %>% \n  characterize() %>% \n  filter(sex == \"Female\") %>% \n  group_by(setting) %>% \n  summarize(mean_age = mean(age))\n\n\n# A tibble: 2 × 2\n  setting mean_age\n  <chr>      <dbl>\n1 Home        49.4\n2 School      53.1\n\n\nCode\n# Answer: School\n\n\n\n\n4. First, how many rows and columns are in the star data? Next, remove outliers using a really poor method, just for practice, by eliminating students whose math (tmathss) scores were more than three standard deviations above or below the corresponding mean. How many rows are in the data now?\n\n\nCode\ndim(star) # 5748 rows, 12 columns\n\n\n[1] 5748   12\n\n\nCode\nstar %>% \n  filter(tmathss <= mean(tmathss) + 3*sd(tmathss) &\n         tmathss >= mean(tmathss) - 3*sd(tmathss)) %>% \n  nrow()\n\n\n[1] 5743\n\n\nCode\n# Answer: 5743  \n\n\n\n\n5. Use the star data to compute standardized math and reading scores; name these variables tmathss and treadss. To create standardized scores, for each variable (math and reading), subtract the mean from each observation and divide by the standard deviation: \\(x_s = \\frac{x_i - \\bar{X}}{sd(X)}\\).\n\nCheck that your computations were correct by computing the mean and standard deviation of each variable (they should be 0 and 1, respectively).\nCompute the mean of the standardized variable for all sex/frl combinations. (I’m asking you to extend what you know here. We haven’t talked explicitly about how to do this yet, but you have seen examples).\nWhat do you make of these findings? Do you see an effect by sex? An frl effect (frl stands for free/reduced lunch, and is a rough proxy for household income)? Is there evidence of an interaction (i.e., that the effect of frl is greater for boys versus girls)?\n\n\n\nCode\nstar <- star %>% \n  mutate(stand_math = (tmathss - mean(tmathss)) / sd(tmathss),\n         stand_rdg  = (treadss - mean(treadss)) / sd(treadss))\n\nstar %>% \n  summarize(stand_math_mean = mean(stand_math),\n            stand_math_sd   = sd(stand_math),\n            stand_rdg_mean = mean(stand_rdg),\n            stand_rdg_sd   = sd(stand_rdg))\n\n\n  stand_math_mean stand_math_sd stand_rdg_mean stand_rdg_sd\n1     2.29625e-16             1  -6.278158e-16            1\n\n\nCode\nstar %>% \n  group_by(sex, frl) %>% \n  summarize(stand_math_mean = mean(stand_math),\n            stand_math_sd   = sd(stand_math),\n            stand_rdg_mean = mean(stand_rdg),\n            stand_rdg_sd   = sd(stand_rdg))\n\n\n# A tibble: 4 × 6\n# Groups:   sex [2]\n  sex   frl   stand_math_mean stand_math_sd stand_rdg_mean stand_rdg_sd\n  <chr> <chr>           <dbl>         <dbl>          <dbl>        <dbl>\n1 boy   no              0.151         0.970          0.148        1.02 \n2 boy   yes            -0.330         0.965         -0.358        0.838\n3 girl  no              0.326         0.962          0.371        1.09 \n4 girl  yes            -0.170         0.969         -0.187        0.863\n\n\n\n\nPlease submit you .qmd file, as well as the rendered .html file."
  },
  {
    "objectID": "homeworks/hw4.html",
    "href": "homeworks/hw4.html",
    "title": "Homework 4",
    "section": "",
    "text": "Part 1\nInstall and load the package {Lahman}, which will give you access to the Teams data.\n\n\n\n\n1. Produce a subset of the data (as a new object) that has the following characteristics:\n\nonly one team (your choice)\n(try to you select a team that is currently still around, or it probably won’t be interesting; see a list of current at http://www.espn.com/mlb/teams).\ndata from 1980 to present (or as current as the dataset allows)\nincludes 5 columns: name, yearID, W, L, R, RA. These 5 variables correspond to the team name, the year, wins, losses, runs scored, and runs allowed).\n\n\n\n\n\n\n2. Create a new variable corresponding to the winning percentage for the team you chose over time:\n\\[w_{pct} = \\frac{wins}{wins + losses}\\] * Order by winning percentage: Least to greatest * Order by winning percentage: Greatest to least * Compute the mean and standard deviation of winning percentage\n\n\n\n\n\n3. With the full Teams data:\n\nCompute the mean and standard deviation of winning percentage for each team\nOrder by winning percentage, greatest to least\n\n\n\n\n\n\n4. Use the full data to reproduce the plot below\n\n\n\n\n\n\n\n\nPart 2\n\n1. Read in the following three datasets, using {here} and the package of your choice ({rio}, {readr}, {haven}, {readxl})\n\nsesame13.sav\nstar.csv\nais.xlsx\n\nHint: For the ais.xlsx data, look at the skip argument within the {readxl} help documentation.\n\n\n\n\n\n2. Using the ais data, compute the average red blood cell count and average bmi by sport. Output these data as SPSS and EXCEL files.\n\n\n\n\n\n3. Use the sesame data to answer the following question: Was the average female age higher in schools or at home?\n\n\n\n\n\n4. First, how many rows and columns are in the star data? Next, remove outliers using a really poor method, just for practice, by eliminating students whose math (tmathss) scores were more than three standard deviations above or below the corresponding mean. How many rows are in the data now?\n\n\n\n\n\n5. Use the star data to compute standardized math and reading scores; name these variables tmathss and treadss. To create standardized scores, for each variable (math and reading), subtract the mean from each observation and divide by the standard deviation: \\(x_s = \\frac{x_i - \\bar{X}}{sd(X)}\\).\n\nCheck that your computations were correct by computing the mean and standard deviation of each variable (they should be 0 and 1, respectively).\nCompute the mean of the standardized variable for all sex/frl combinations. (I’m asking you to extend what you know here. We haven’t talked explicitly about how to do this yet, but you have seen examples).\nWhat do you make of these findings? Do you see an effect by sex? An frl effect (frl stands for free/reduced lunch, and is a rough proxy for household income)? Is there evidence of an interaction (i.e., that the effect of frl is greater for boys versus girls)?\n\n\n\n\n\n\nPlease submit you .qmd file, as well as the rendered .html file."
  },
  {
    "objectID": "homeworks/hw5-key.html",
    "href": "homeworks/hw5-key.html",
    "title": "Homework 5",
    "section": "",
    "text": "Please submit Homework 5 as a .qmd file AND as a rendered document (.pdf or .html)\n\n \n\n\n1. Create a new Quarto document and modify the YAML to\n\nInclude your name\nChange the syntax highlighting to any scheme but the default. The options are default, tango, pygments, kate, monochrome, espresso, zenburn, haddock, and textmate. You can also use NULL if you want no highlighting.   \nSet the global chunk option to make all figures 9” wide and the height to a value that makes sense to you, and does not display the code, or any warnings or messages from the code, but evaluates every function/line of the code.\n\n\n\n2. Create a code chunk that:\n\nLoads all the packages you decide to use for the lab.\nSets the theme for your visualizations.\n\n  \n\n\n3. Import the ecls-k_samp.sav dataset (found here), and produce the plot below. Do not show the code you used (colors, themes, etc. don’t matter here).\n\n\n\n\n\n  \n\n\n4. Run The following lines of code to store the mean and standard deviation of t1mscale. Extend this code to calculate (in the same code chunk) the mean and standard deviation of t2mscale. Note this code assumes you read the ecls-k dataset in as an object called eclsk - you should substitute in whatever the name is for your data object. The code below also assumes you have used clean_names and one more thing about the data we talked about in class.\n\nt1mean <- mean(eclsk$t1mscale, na.rm = TRUE)\nt1sd <- sd(eclsk$t1mscale, na.rm = TRUE)\n\nt2mean <- mean(eclsk$t2mscale, na.rm = TRUE)\nt2sd <- sd(eclsk$t2mscale, na.rm = TRUE)\n\n  \n\n\n5. Using the values you calculated above, use an inline code evaluation below to report the means and SDs for each of the two time points (t1mscale and t2mscale). Also report the difference between the means (i.e., the average gain).\n\nThe mean for time point one was 20.51, with a standard deviation of 7.37. At time point two, the mean was 28.57, with a standard deviation of 8.78. The difference between the means was between the time points was thus 8.06 points.\n \n\n\n6. Pretend you are trying to teach somebody how to load data. Describe the process below that we’ve discussed in class, including why it helps reproducibility, and echo chunks of code as necessary without actually evaluating any of it.\n\nInclude some text that is bold and some that is italics.\n\n\nCreate and RStudio project. This will serve as the root directory. Create empty data and scripts folders. Place any data you have in the data folder.\nTo import the data, create a new script, then load the following packages:\n\nlibrary(rio)\nlibrary(here)\n\nIf you don’t have these packages installed, you’ll need to install them first, using install.packages(c(\"rio\", \"here\")).\nFinally, use the {here} library to navigate file paths, and rio::import() to import data of basically any type. For example, assuming you have created an RStudio project and you are working from that project, and you’ve put the data you want to load in at folder called data, any of the following should work\n\nd <- import(here(\"data\", \"data_to_load.sav\"),\n            setclass = \"tbl_df\")\n\nd <- import(here(\"data\", \"data_to_load.xlsx\"),\n            setclass = \"tbl_df\")\n\nd <- import(here(\"data\", \"data_to_load.dta\"),\n            setclass = \"tbl_df\")\n\nNote that the setclass argument is optional, and changes the import to a tibble instead of a standard data frame."
  },
  {
    "objectID": "homeworks/hw5.html",
    "href": "homeworks/hw5.html",
    "title": "Homework 5",
    "section": "",
    "text": "Please submit Homework 5 as a .qmd file AND as a rendered document (.pdf or .html)\n\n \n\n\n1. Create a new Quarto document and modify the YAML to\n\nInclude your name\nChange the syntax highlighting to any scheme but the default. The options are default, tango, pygments, kate, monochrome, espresso, zenburn, haddock, and textmate. You can also use NULL if you want no highlighting.   \nSet the global chunk option to make all figures 9” wide and the height to a value that makes sense to you, and does not display the code, or any warnings or messages from the code, but evaluates every function/line of the code.\n\n\n\n2. Create a code chunk that:\n\nLoads all the packages you decide to use for the lab.\nSets the theme for your visualizations.\n\n  \n\n\n3. Import the ecls-k_samp.sav dataset (found here), and produce the plot below. Do not show the code you used (colors, themes, etc. don’t matter here).\n\n\n\n\n\n  \n\n\n4. Run The following lines of code to store the mean and standard deviation of t1mscale. Extend this code to calculate (in the same code chunk) the mean and standard deviation of t2mscale. Note this code assumes you read the ecls-k dataset in as an object called eclsk - you should substitute in whatever the name is for your data object. The code below also assumes you have used clean_names and one more thing about the data we talked about in class.\n\nt1mean <- mean(eclsk$t1mscale, na.rm = TRUE)\nt1sd <- sd(eclsk$t1mscale, na.rm = TRUE)\n\nt2mean <- mean(eclsk$t2mscale, na.rm = TRUE)\nt2sd <- sd(eclsk$t2mscale, na.rm = TRUE)\n\n  \n\n\n5. Using the values you calculated above, use an inline code evaluation below to report the means and SDs for each of the two time points (t1mscale and t2mscale). Also report the difference between the means (i.e., the average gain).\n \n\n\n6. Pretend you are trying to teach somebody how to load data. Describe the process below that we’ve discussed in class, including why it helps reproducibility, and echo chunks of code as necessary without actually evaluating any of it.\n\nInclude some text that is bold and some that is italics."
  },
  {
    "objectID": "homeworks/hw7.html",
    "href": "homeworks/hw7.html",
    "title": "Homework 7",
    "section": "",
    "text": "Note, this is a group project. You will need to work with your final project group on this lab. Each member of your group should make at least one commit. Once you have completed the assignment, provide a link to the repository in the text box for the lab on Canvas.\n\nCreate a shared GitHub repo for this lab. Call it hw_7\n\n \n\n\nCommit 1\n\nAdd a data folder to the repo. Place star.csv into the folder.\nAdd a folder for your scripts documents.\nWrite code in a .qmd document to load all the libraries that will be used in the document\nSet global YAML options to make the code not show anywhere in the document, set figure width to 6.5 and figure height to 8, and specify a .pdf file as output.\nWrite the code to load the data.\n\n\n\n\n  \n\n\nCommit 2\n\nAdd the bibliography (.bib) file and include at least four additional references.\nInclude in-text examples of citations formatted as Author (Year) and (Author, Year).\nRender the document and make sure the reference section has a level 1 header of “References”, and the references are displayed on their own page.   \n\n\n\nCommit 3\n\nWrite the code to create the summary statistics shown in the table below. Output the table below and briefly describe it in text.\n\n\n\n?(caption)\n\n\n\n\n\n\nsex\nfrl\nmath_mean\nmath_sd\nrdg_mean\nrdg_sd\n\n\n\n\nboy\nno\n492.85\n46.34\n441.46\n32.32\n\n\nboy\nyes\n469.87\n46.09\n425.38\n26.63\n\n\ngirl\nno\n501.21\n45.96\n448.54\n34.52\n\n\ngirl\nyes\n477.51\n46.30\n430.80\n27.42\n\n\n\n\n\n\n  \n\n\nCommit 4\n\nCreate the following plot, using whatever theme you’d like, and briefly discuss it in text. (Note that might need to problem-solve how to put the legend at the bottom.)\n\n\n\n\n\n\nFigure 1: Relation between teacher experience and math scores"
  },
  {
    "objectID": "homeworks/hw8-key.html",
    "href": "homeworks/hw8-key.html",
    "title": "Homework 8",
    "section": "",
    "text": "The data for this homework comes from the Open University Learning Analytics Dataset (OULAD). It contains data about courses, students, and their interactions with Virtual Learning Environment (VLE) for seven selected courses (called modules). Presentations of courses start in February and October - they are marked by “B” and “J” respectively. The dataset (tables) are connected using unique identifiers. All datasets are stored in the .csv format. Please check out the OULAD site to learn more about the data and understand the keys.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nJoining, by = “id_student”\n\n\n\n213166 rows in the joined data. That is different than the number of rows in the studentInfo data (32593 rows) because one student could take multiple assessments, so the studentAssessment added more rows per student, representing additional assessments.\n\n\n\n\n\n\n\n\n\nJoining, by = c(“code_module”, “code_presentation”, “id_assessment”)\n\n\n\n“assessment_type”, “date”, and “weight”\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n25339 rows in this joined data. Each row represents a single student; more specifically, the max TMA score for that student."
  },
  {
    "objectID": "homeworks/hw8.html",
    "href": "homeworks/hw8.html",
    "title": "Homework 8",
    "section": "",
    "text": "The data for this homework comes from the Open University Learning Analytics Dataset (OULAD). It contains data about courses, students, and their interactions with Virtual Learning Environment (VLE) for seven selected courses (called modules). Presentations of courses start in February and October - they are marked by “B” and “J” respectively. The dataset (tables) are connected using unique identifiers. All datasets are stored in the .csv format. Please check out the OULAD site to learn more about the data and understand the keys."
  },
  {
    "objectID": "homeworks/hw9-key.html#table",
    "href": "homeworks/hw9-key.html#table",
    "title": "Homework 9",
    "section": "Table",
    "text": "Table\n\n\nCode\nd_summary %>% \n  kable(digits = 2,\n         col.names = c(\"Race\", \"Total Words\")) %>% \n  kable_styling(latex_options = \"striped\", full_width = FALSE)\n\n\n\n\nTable 1:  Total number of words spoken by each race across the entire LOTR trilogy \n \n  \n    Race \n    Total Words \n  \n \n\n  \n    Elf \n    3737 \n  \n  \n    Hobbit \n    8796 \n  \n  \n    Human \n    8712"
  },
  {
    "objectID": "homeworks/hw9-key.html#figure",
    "href": "homeworks/hw9-key.html#figure",
    "title": "Homework 9",
    "section": "Figure",
    "text": "Figure\n\n\nCode\nd_summary %>% \n  ggplot(aes(Race, total_words)) +\n  geom_col(fill = \"cornflowerblue\") +\n  theme_minimal() +\n  labs(y = \"Total Words Spoken\",\n       title = \"Lord of the Rings Trilogy\",\n       subtitle = \"Total number of words spoken by three races across the movie trilogy\")\n\n\n\n\n\nFigure 1: Total number of words spoken by three races across the movie trilogy\n\n\n\n\n \n\n8. Let’s make messy data. Your fifth code chunk should include code that uses lotr_tidy and pivot_wider() to:\n\nGet one variable per Race. Save this as an object\nGet one variable per Gender. Save this as an object\n\n\n\nCode\nmessy_by_race <- lotr_tidy %>% \n  pivot_wider(\n    names_from = Race, \n    values_from = Words,\n  )\n\nmessy_by_gender <- lotr_tidy %>% \n  pivot_wider(\n    names_from = Gender, \n    values_from = Words,\n  )\n\n\n   \n\n\n\nPart 2\n\n \n\n1. Tidy the Project Reads data\n\nLoad the Project_Reads_Scores.csv file\nRemove columns 5-9, 24, and 25\nFilter to remove the rows in student_id that represent aggregate summaries\nTidy the remaining dataset such that a case represents a score and percentage within a unit (i.e., score and percentage will be separate columns). Take a VERY close look at the data. You will be able to use the names_sep argument if you first rename() two columns. Identify those two columns first. Also, you will need to first pivot_longer and then pivot_wider in order to tidy properly. In these data, “tidy” is a row for each of the seven units for every student_id.\n\n\n\nCode\nlibrary(janitor)\nlibrary(ggthemes)\n\ntheme_set(theme_minimal())\n\nreads <- read_csv(here(\"data\", \"Project_Reads_Scores.csv\")) %>% \n  clean_names()\n\n\nreads_tidy <- reads %>% \n  select(4, 1:3, 10:23) %>% \n  rename(\"unit_56_score\" = \"unit_5_6_score\", \n         \"unit_56_percent\" = \"unit_5_6_percent\") %>% \n  filter(student_id != \"All Students (Average)\") %>% \n  pivot_longer(\n    cols = contains(\"unit\"),\n    names_prefix = \"unit_\",\n    names_sep = \"_\",\n    names_to = c(\"unit\", \"score_type\"),\n    values_to = \"score\",\n    values_transform = list(score = as.character)\n  ) %>% \n  mutate(score = parse_number(score)) %>% \n  pivot_wider(\n    names_from = score_type,\n    values_from = score\n  )\n\n\n \n\n\n2. Produce a summary table of the mean percentage correct for each unit within test sites. Report the summary in a table.\n\n\nCode\nreads_summary <- reads_tidy %>% \n    group_by(test_site, unit) %>% \n    summarize(percent = mean(percent))\n\nreads_summary %>% \n  kable()\n\n\n\n\n \n  \n    test_site \n    unit \n    percent \n  \n \n\n  \n    JONES \n    1 \n    8.266667 \n  \n  \n    JONES \n    2 \n    13.333333 \n  \n  \n    JONES \n    3 \n    17.066667 \n  \n  \n    JONES \n    4 \n    22.666667 \n  \n  \n    JONES \n    56 \n    29.466667 \n  \n  \n    JONES \n    7 \n    46.533333 \n  \n  \n    JONES \n    8 \n    52.400000 \n  \n  \n    VIRDEN \n    1 \n    16.800000 \n  \n  \n    VIRDEN \n    2 \n    18.400000 \n  \n  \n    VIRDEN \n    3 \n    24.800000 \n  \n  \n    VIRDEN \n    4 \n    27.400000 \n  \n  \n    VIRDEN \n    56 \n    44.400000 \n  \n  \n    VIRDEN \n    7 \n    55.533333 \n  \n  \n    VIRDEN \n    8 \n    61.066667 \n  \n  \n    WESTSIDE \n    1 \n    14.133333 \n  \n  \n    WESTSIDE \n    2 \n    19.466667 \n  \n  \n    WESTSIDE \n    3 \n    22.933333 \n  \n  \n    WESTSIDE \n    4 \n    29.000000 \n  \n  \n    WESTSIDE \n    56 \n    31.333333 \n  \n  \n    WESTSIDE \n    7 \n    38.466667 \n  \n  \n    WESTSIDE \n    8 \n    50.133333"
  },
  {
    "objectID": "homeworks/hw9.html",
    "href": "homeworks/hw9.html",
    "title": "Homework 9",
    "section": "",
    "text": "Part 1\n\nThis part of the homework uses Jenny Bryan’s Lord of the Rings tidy data materials.\n \n\n1. Create a new RStudio Project and name it hw_9\n \n\n\n2. Within that project, create a new Quarto document and modify the YAML to:\n\nInclude your name\nRender to html\nChange the syntax highlighting to any scheme but the default\nInclude code folding\nInclude a table of contents\n\nUse level 1 headers for items (4) through (8) below\nUse level 2 headers for your table and plot in (7) below\n\nSet global chunk options for the document to display and evaluate all code, and not display any warnings or messages\n\n \n\n\n3. Your first code chunk should:\n\nBe labelled load-packages\nLoad all the necessary packages (please don’t load packages you do not use)\nInclude options for this code chunk so it will not display the code or the results from the code.\n\n \n\n\n\n4. Your second code chunk should:\n\nBe labelled load-data\nImport the following three data sets, each as separate objects\n\nThe_Fellowship_Of_The_Ring.csv\nThe_Two_Towers.csv\nThe_Return_Of_The_King.csv\n\n(These data sets show the words spoken by characters of different races and genders in the Lord of the Rings movie trilogy.)\n\n\nCombine these three data sets into one data set as a new object named lotr_untidy\n\n\n\n\n \n\n\n5. Describe why the combined data set is not tidy.\nThere is information in the column headings, namely sex (male, female).\n \n\n\n6. Your third code chunk should:\n\nHave a meaningful label (do not use spaces or capital letters or underscores)\nTidy the combined data set\nSave the tidy data to the data folder in your project as lotr_tidy\n\n\n\n\n \n\n\n7. Your fourth code chunk should include code that:\n\nReads in the Female.csv and Male.csv files and saves a single tidy data frame to file\nThis should reproduce exactly the lotr_tidy data from above\nCompute the total number of words spoken by each race across the entire trilogy.\nShow these results in a table and a figure.\n\n\n\n\n\n\n\n\n\n\n \n\n8. Let’s make messy data. Your fifth code chunk should include code that uses lotr_tidy and pivot_wider() to:\n\nGet one variable per Race. Save this as an object\nGet one variable per Gender. Save this as an object\n\n\n\n\n   \n\n\n\nPart 2\n\n \n\n1. Tidy the Project Reads data\n\nLoad the Project_Reads_Scores.csv file\nRemove columns 5-9, 24, and 25\nFilter to remove the rows in student_id that represent aggregate summaries\nTidy the remaining dataset such that a case represents a score and percentage within a unit (i.e., score and percentage will be separate columns). Take a VERY close look at the data. You will be able to use the names_sep argument if you first rename() two columns. Identify those two columns first. Also, you will need to first pivot_longer and then pivot_wider in order to tidy properly. In these data, “tidy” is a row for each of the seven units for every student_id.\n\n\n\n\n \n\n\n2. Produce a summary table of the mean percentage correct for each unit within test sites. Report the summary in a table."
  },
  {
    "objectID": "homeworks/hw10-key.html",
    "href": "homeworks/hw10-key.html",
    "title": "Homework 10",
    "section": "",
    "text": "1. Create a new RStudio Project and modify the YAML to:\n\nRender to html\nChange the syntax highlighting to any scheme but the default\nInclude code folding\n\n\n\n2a. Reorder factors\n\nGet familiar with the gss_cat data within the {forcats} package.\nRemove the rows with missing data in the tvhours column.\nCalculate the mean tvhours by marital status.\nDisplay the results as a point plot of average TV consumption by marital status (tvhours on the x-axis and martial on they y-axis).\n\nIn your plot, reorder the levels of marital according to tvhours.\n\nGive your plot meaningful axis labels and a title.\n\n\n\nCode\ngss_cat %>%\n  drop_na(tvhours) %>%\n  group_by(marital) %>%\n  summarise(tvhours_mean = mean(tvhours)) %>%\n  ggplot(aes(tvhours_mean, fct_reorder(marital, tvhours_mean))) +\n  geom_point() +\n  labs(y = \"Marital Status\",\n       x = \"TV Hours/Day\",\n       title = \"Mean TV Hours/Day by Marital Status\")\n\n\n\n\n\n\n\n2b. Working with tables\n\nDisplay the same results (mean tvhours by marital status) as a table using kable().\n\nChange the column names.\nRound the mean tvhours to one decimal.\nBold the row with the highest mean tvhours.\n\n\n\n\n3a. Recode factors\n\nUse any of the functions we talked about in class to display the levels of the marital variable.\nrecode or collapse the marital column into three categories: “Not married”, “Married”, and “No answer”.\nCalculate the mean tvhours by marital status.\nDisplay the results as a column plot of average TV consumption by marital status (martial on the x-axis and tvhours on they y-axis).\n\nFrom left to right, the columns in your plot should read: “Not married”, “Married”, and “No answer”.\n\nMake your plot look a little nicer with some color, different theme, meaningful axis labels, and a title.\n\n\n\nCode\nlevels(gss_cat$marital)\n\n\n[1] \"No answer\"     \"Never married\" \"Separated\"     \"Divorced\"     \n[5] \"Widowed\"       \"Married\"      \n\n\nCode\ntable(gss_cat$marital)\n\n\n\n    No answer Never married     Separated      Divorced       Widowed \n           17          5416           743          3383          1807 \n      Married \n        10117 \n\n\nCode\ngss_cat %>% \n  count(marital)\n\n\n# A tibble: 6 × 2\n  marital           n\n  <fct>         <int>\n1 No answer        17\n2 Never married  5416\n3 Separated       743\n4 Divorced       3383\n5 Widowed        1807\n6 Married       10117\n\n\nCode\ngss_cat %>% \n  mutate(marital = fct_collapse(marital,\n                                \"Not married\" = c(\"Never married\", \"Separated\", \"Divorced\", \"Widowed\"),\n                                \"Married\" = c(\"Married\"),\n                                \"No anser\" = c(\"No answer\"))) %>% \n  group_by(marital) %>% \n  summarise(tvhours_mean = mean(tvhours, na.rm = TRUE)) %>%\n  ggplot(aes(fct_relevel(marital, \"Not married\", \"Married\"), tvhours_mean)) +\n  geom_col(aes(fill = marital)) +\n  scale_fill_colorblind() +\n  labs(y = \"Marital Status\",\n       x = \"TV Hours/Day\",\n       title = \"Mean TV Hours/Day by Marital Status\") +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n3b. Working with tables\n\nDisplay the same results (mean tvhours by collapsed marital status) as a table using the {gt}.\n\nChange the column names.\nRound the mean tvhours to one decimal.\nHighlight in yellow the row with the lowest mean tvhours.\n\n\n\n\nCode\ngss_cat %>% \n  mutate(marital = fct_collapse(marital,\n                                \"Not married\" = c(\"Never married\", \"Separated\", \"Divorced\", \"Widowed\"),\n                                \"Married\" = c(\"Married\"),\n                                \"No answer\" = c(\"No answer\"))) %>% \n  group_by(marital) %>% \n  summarise(tvhours_mean = mean(tvhours, na.rm = TRUE)) %>% \n  arrange(tvhours_mean) %>% \n  gt() %>% \n  fmt_number(\n    columns = 2,\n    decimals = 1\n  ) %>% \n  tab_style(\n    style = cell_fill(color = \"yellow\"),\n    locations = cells_body(\n      columns = c(1, 2),\n      rows = 3\n    )\n  ) %>% \n  cols_label(\n    marital = \"Marital Status\",\n    tvhours_mean = \"Mean TV hours/day\"\n  )\n\n\n\n\n\n\nTable 1:  Mean TV Hours/Day by Marital Status \n  \n    \n    \n      Marital Status\n      Mean TV hours/day\n    \n  \n  \n    No answer\n2.6\n    Married\n2.7\n    Not married\n3.3\n  \n  \n  \n\n\n\n\n\nThis lab borrows from Garrett Grolemund’s Remaster the Tidyverse materials."
  },
  {
    "objectID": "homeworks/hw10.html",
    "href": "homeworks/hw10.html",
    "title": "Homework 10",
    "section": "",
    "text": "1. Create a new RStudio Project and modify the YAML to:\n\nRender to html\nChange the syntax highlighting to any scheme but the default\nInclude code folding\n\n\n\n2a. Reorder factors\n\nGet familiar with the gss_cat data within the {forcats} package.\nRemove the rows with missing data in the tvhours column.\nCalculate the mean tvhours by marital status.\nDisplay the results as a point plot of average TV consumption by marital status (tvhours on the x-axis and martial on they y-axis).\n\nIn your plot, reorder the levels of marital according to tvhours.\n\nGive your plot meaningful axis labels and a title.\n\n\n\n\n\n\n2b. Working with tables\n\nDisplay the same results (mean tvhours by marital status) as a table using kable().\n\nChange the column names.\nRound the mean tvhours to one decimal.\nBold the row with the highest mean tvhours.\n\n\n\n\n3a. Recode factors\n\nUse any of the functions we talked about in class to display the levels of the marital variable.\nrecode or collapse the marital column into three categories: “Not married”, “Married”, and “No answer”.\nCalculate the mean tvhours by marital status.\nDisplay the results as a column plot of average TV consumption by marital status (martial on the x-axis and tvhours on they y-axis).\n\nFrom left to right, the columns in your plot should read: “Not married”, “Married”, and “No answer”.\n\nMake your plot look a little nicer with some color, different theme, meaningful axis labels, and a title.\n\n\n\n\n\n\n3b. Working with tables\n\nDisplay the same results (mean tvhours by collapsed marital status) as a table using the {gt}.\n\nChange the column names.\nRound the mean tvhours to one decimal.\nHighlight in yellow the row with the lowest mean tvhours.\n\n\n\n\n\nThis lab borrows from Garrett Grolemund’s Remaster the Tidyverse materials."
  },
  {
    "objectID": "slides/w1_intro.html#how-many-beans-are-in-the-jar",
    "href": "slides/w1_intro.html#how-many-beans-are-in-the-jar",
    "title": "Introduction to Data Science with R",
    "section": "How many beans are in the jar?",
    "text": "How many beans are in the jar?\n(keep your guess to yourself!)"
  },
  {
    "objectID": "slides/w1_intro.html#introduction-to-the-course",
    "href": "slides/w1_intro.html#introduction-to-the-course",
    "title": "Introduction to Data Science with R",
    "section": "Introduction to the Course",
    "text": "Introduction to the Course\nWeek 1"
  },
  {
    "objectID": "slides/w1_intro.html#about-me",
    "href": "slides/w1_intro.html#about-me",
    "title": "Introduction to Data Science with R",
    "section": "About me",
    "text": "About me\n\nBA: UC Santa Barbara\nPhD, School Psychology: University of Maryland\nBehavioral Research & Teaching (BRT) at UO since 2009\nResearch Associate Professor\n\nResearch\n\nApplied statistical methods to measure and monitor student growth\nInform the applied research methodologies used by researchers\nDeveloping and improving systems that support data-based decision making using advanced technologies to influence teachers’ instructional practices and increase student achievement\n\nCORE and CORE II\nInclusive Skill-building Learning Approach (ISLA)\n\n\nTeaching\n\nEDLD 651 - this one!\nEDLD 654 - Applied Machine Learning for Educational Data Scientists\nEDLD 609 - Data Science Capstone"
  },
  {
    "objectID": "slides/w1_intro.html#about-you",
    "href": "slides/w1_intro.html#about-you",
    "title": "Introduction to Data Science with R",
    "section": "About you",
    "text": "About you\nPlease introduce yourself\n\nName and program/year of study\nWhy you want to learn R?\nDo you have any R experience?\nTell me whatever you’d like me and the class to know (e.g., pronouns, circumstances)\nHow many beans are in the jar?\n\nNo changing your answer! Academic integrity!"
  },
  {
    "objectID": "slides/w1_intro.html#why-is-this-important",
    "href": "slides/w1_intro.html#why-is-this-important",
    "title": "Introduction to Data Science with R",
    "section": "Why is this important?",
    "text": "Why is this important?\n\nreproducibility\ntransparency\nopen data and code"
  },
  {
    "objectID": "slides/w1_intro.html#create-a-journal-article",
    "href": "slides/w1_intro.html#create-a-journal-article",
    "title": "Introduction to Data Science with R",
    "section": "Create a journal article!",
    "text": "Create a journal article!\nwith quarto"
  },
  {
    "objectID": "slides/w1_intro.html#create-slides",
    "href": "slides/w1_intro.html#create-slides",
    "title": "Introduction to Data Science with R",
    "section": "Create slides!",
    "text": "Create slides!\nwith quarto\nLike these!"
  },
  {
    "objectID": "slides/w1_intro.html#create-a-website",
    "href": "slides/w1_intro.html#create-a-website",
    "title": "Introduction to Data Science with R",
    "section": "Create a website!",
    "text": "Create a website!\nwith {blogdown}, {distill}, {bookdown}, {rmarkdown}, or {quarto}\n\n\nFor a project\n\n\nFor this class"
  },
  {
    "objectID": "slides/w1_intro.html#create-a-dashboard",
    "href": "slides/w1_intro.html#create-a-dashboard",
    "title": "Introduction to Data Science with R",
    "section": "Create a dashboard!",
    "text": "Create a dashboard!\nwith {flexdashboard}!"
  },
  {
    "objectID": "slides/w1_intro.html#create-an-app",
    "href": "slides/w1_intro.html#create-an-app",
    "title": "Introduction to Data Science with R",
    "section": "Create an app!",
    "text": "Create an app!\nwith {shiny}!"
  },
  {
    "objectID": "slides/w1_intro.html#create-a-poster",
    "href": "slides/w1_intro.html#create-a-poster",
    "title": "Introduction to Data Science with R",
    "section": "Create a poster!",
    "text": "Create a poster!\nwith {posterdown}!"
  },
  {
    "objectID": "slides/w1_intro.html#why-is-r-awesome",
    "href": "slides/w1_intro.html#why-is-r-awesome",
    "title": "Introduction to Data Science with R",
    "section": "Why is R awesome?",
    "text": "Why is R awesome?\nData visualizations\n\n{ggplot2} – your default by the end of this class, really powerful\n{plotly} – interactive data visualizations\n{shiny} –- interactive data communications\n\n\nWeb\n\n{blogdown}, {distill}, {bookdown}, quarto –- build your own website\n{rvest} –- scrape web data\n\n\n\nModeling\n\n{lme4} –- multilevel modeling\n{lavaan} –- SEM\n{tidymodels} –- machine learning\n\n\n\nWorkflow!\n\nRStudio projects\n{here}"
  },
  {
    "objectID": "slides/w1_intro.html#acknowledgements",
    "href": "slides/w1_intro.html#acknowledgements",
    "title": "Introduction to Data Science with R",
    "section": "Acknowledgements",
    "text": "Acknowledgements\nThis course, and much of the materials prepared and content presented, was originally developed by Daniel Anderson\n\nAlison Hill, Chester Ismay, and Andrew Bray helped Daniel design the content for this course and the specialization as a whole"
  },
  {
    "objectID": "slides/w1_intro.html#what-this-class-is-about",
    "href": "slides/w1_intro.html#what-this-class-is-about",
    "title": "Introduction to Data Science with R",
    "section": "What this class is about",
    "text": "What this class is about\nCelebrating successes!"
  },
  {
    "objectID": "slides/w1_intro.html#dr.-richard-feynman",
    "href": "slides/w1_intro.html#dr.-richard-feynman",
    "title": "Introduction to Data Science with R",
    "section": "Dr. Richard Feynman",
    "text": "Dr. Richard Feynman\nAmerican theoretical physicist, Nobel Laureate"
  },
  {
    "objectID": "slides/w1_intro.html#what-this-class-is-about-1",
    "href": "slides/w1_intro.html#what-this-class-is-about-1",
    "title": "Introduction to Data Science with R",
    "section": "What this class is about",
    "text": "What this class is about\nCelebrating failures!"
  },
  {
    "objectID": "slides/w1_intro.html#what-does-richard-feynman-have-to-say-about-failing",
    "href": "slides/w1_intro.html#what-does-richard-feynman-have-to-say-about-failing",
    "title": "Introduction to Data Science with R",
    "section": "What does Richard Feynman have to say about failing?",
    "text": "What does Richard Feynman have to say about failing?"
  },
  {
    "objectID": "slides/w1_intro.html#what-this-class-is-about-2",
    "href": "slides/w1_intro.html#what-this-class-is-about-2",
    "title": "Introduction to Data Science with R",
    "section": "What this class is about",
    "text": "What this class is about\nCelebrating trying!"
  },
  {
    "objectID": "slides/w1_intro.html#very-smart-person-richard-feynman-said",
    "href": "slides/w1_intro.html#very-smart-person-richard-feynman-said",
    "title": "Introduction to Data Science with R",
    "section": "Very smart person Richard Feynman said:",
    "text": "Very smart person Richard Feynman said:"
  },
  {
    "objectID": "slides/w1_intro.html#what-this-class-is-about-3",
    "href": "slides/w1_intro.html#what-this-class-is-about-3",
    "title": "Introduction to Data Science with R",
    "section": "What this class is about",
    "text": "What this class is about\nLearning to problem solve!"
  },
  {
    "objectID": "slides/w1_intro.html#richard",
    "href": "slides/w1_intro.html#richard",
    "title": "Introduction to Data Science with R",
    "section": "Richard?",
    "text": "Richard?"
  },
  {
    "objectID": "slides/w1_intro.html#shareing",
    "href": "slides/w1_intro.html#shareing",
    "title": "Introduction to Data Science with R",
    "section": "Shareing",
    "text": "Shareing\nSometimes I may ask people to share with the class something they have learned.\n\nA success, a new {package} or function()\nCompletely voluntary\n\nBUT, you might get a hex sticker 🎉"
  },
  {
    "objectID": "slides/w1_intro.html#sharing",
    "href": "slides/w1_intro.html#sharing",
    "title": "Introduction to Data Science with R",
    "section": "Sharing",
    "text": "Sharing\nSometimes I may ask people to share with the class something they have learned.\n\nA success, a new {package} or function()\nCompletely voluntary\n\nBUT, you might get a hex sticker 🎉"
  },
  {
    "objectID": "slides/w1_intro.html#a-sharing-example",
    "href": "slides/w1_intro.html#a-sharing-example",
    "title": "Introduction to Data Science with R",
    "section": "A sharing example",
    "text": "A sharing example\n\n\n\n“I made this cool figure!\nI used the {gghighlight} package for the first time!\nAnd I annoted my facets separately!”"
  },
  {
    "objectID": "slides/w1_intro.html#another-sharing-example",
    "href": "slides/w1_intro.html#another-sharing-example",
    "title": "Introduction to Data Science with R",
    "section": "Another sharing example",
    "text": "Another sharing example\n\n\n\n“I went to re-run my ‘cool figure’ a couple months later and my code did not work!\nI spent [mumble mumble] minutes getting it to work again!”"
  },
  {
    "objectID": "slides/w1_intro.html#courageous-conversations-with-me",
    "href": "slides/w1_intro.html#courageous-conversations-with-me",
    "title": "Introduction to Data Science with R",
    "section": "Courageous Conversations with Me",
    "text": "Courageous Conversations with Me\n\nCreating norms of openness, understanding, and development\nAn opportunity for us to grow\nAssume positive intent\nCritical for my work (and yours)\n\n\n\nCredit: Dr. Rhonda Nese"
  },
  {
    "objectID": "slides/w1_intro.html#course-learning-outcomes",
    "href": "slides/w1_intro.html#course-learning-outcomes",
    "title": "Introduction to Data Science with R",
    "section": "Course Learning Outcomes",
    "text": "Course Learning Outcomes\n\nUnderstand the R package ecosystem\n\nhow to find, install, load, and learn about them\n\nRead “flat” (i.e., rectangular) datasets into R\nPerform basic data manipulations / transformations in R with the {tidyverse}\n\nleverage appropriate functions for introductory data science tasks\nprepare data using scripts and reproducible workflows\n\nUse version control with R via git and GitHub\nUse Quarto to create reproducible dynamic reports\nUnderstand and create different types of data visualizations"
  },
  {
    "objectID": "slides/w1_intro.html#course-site",
    "href": "slides/w1_intro.html#course-site",
    "title": "Introduction to Data Science with R",
    "section": "Course Site",
    "text": "Course Site\nhttps://jnese.github.io/intro-DS-R-fall-2023/index.html\n\nschedule\nslides (posted before each class)\nassignments (posted after each class)\nsyllabus\ndata\n\nCanvas\n\nsubmit assignments\ncourse announcements"
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "Before Week 1\nPlease complete the following five installs before our first class.\nInstructions for each are on the Installs page.\n\nInstall R\nInstall RStudio\nRegister a GitHub account\nInstall Git\nInstall GitKraken\n\n\n\nWeek 1: Introduction\n\n\n\n\n\n\n  \n    \n    \n      \n      Reading\n      Slides\n      Lecture\n      Assigned\n      Due\n    \n  \n  \n    Sep-28\nR4DS(2e) 5\n\n[]\n\n[]1\nA Quick Tour of the RStudio IDE2\nInstalls\n\n    \nR4DS(2e) 3\n\n[]\n\n\nRStudio Primer: Programming basics\n\n\n    \nR4DS(2e) 7\n\n\n\nCodecademy: Introduction to R Syntax\n\n\n    \nOptional: MD 1.1\n\n\n\nFinal Project\n\n\n  \n  \n  \n    \n      1 Passcode: NA\n    \n    \n      2 I do not rearrange my RStudio panes as he does.\n    \n  \n\n\n\n\n\n\nWeek 2: Workflow\n\n\n\n\n\n\n  \n    \n    \n      \n      Reading\n      Slides\n      Lecture\n      Assigned\n      Due\n    \n  \n  \n    Oct-05\nProject-oriented Workflow\n\n\n\n[]1\nRStudio Primer: Data Visualization Basics\n\nA Quick Tour of the RStudio IDE\n\n    \nR4DS(2e) 29\n\n\n\n\nRbootcamp: Ch 2\n\nRStudio Primer: Programming basics\n\n    \nhere::here() Jenny Bryan\n\n\n\nCodecademy: Introduction to Visualization with R\n\nCodecademy: Introduction to R Syntax\n\n    \n{rio} vignette\n\n\n\nHomework 1\n\n\n  \n  \n  \n    \n      1 Passcode: NA\n    \n  \n\n\n\n\n\n\nWeek 3: {ggplot2}\n\n\n\n\n\n\n  \n    \n    \n      \n      Reading\n      Slides\n      Lecture\n      Assigned\n      Due\n    \n  \n  \n    Oct-12\nR4DS(2e) 2\n\n\n\n[]1\nRStudio Primer: Working with Tibbles\n\nRStudio Primer: Data Visualization Basics\n\n    \nOptional: MD 2.0 to 2.9\n\n\n\n\nRbootcamp: Ch 3\n\nRbootcamp: Ch 2\n\n    \nOptional: Healy Ch 3\n\n\n\nCodecademy: Aggregates in R\n\nCodecademy: Introduction to Visualization with R\n\n    \n\n\n\nHomework 2\n\nHomework 1\n\n    \n\n\n\nHomework 3\n\nFinal Project: Finalize Groups\n\n  \n  \n  \n    \n      1 Passcode: NA\n    \n  \n\n\n\n\n\n\nWeek 4: {dplyr}\n\n\n\n\n\n\n  \n    \n    \n      \n      Reading\n      Slides\n      Lecture\n      Assigned\n      Due\n    \n  \n  \n    Oct-19\nR4DS(2e) 4\n\n\n\n[]1\nMarkdown Tutorial\n\nRStudio Primer: Working with Tibbles\n\n    \nOptional: MD 3.1 to 3.6, 3.8\n\n\n\n\nHomework 4\n\nRbootcamp: Ch 3\n\n    \n\n\n\n\nCodecademy: Aggregates in R\n\n    \n\n\n\n\nHomework 2\n\n    \n\n\n\n\nHomework 3\n\n  \n  \n  \n    \n      1 Passcode: NA\n    \n  \n\n\n\n\n\n\nWeek 5: Quarto\n\n\n\n\n\n\n  \n    \n    \n      \n      Reading\n      Slides\n      Lecture\n      Assigned\n      Due\n    \n  \n  \n    Oct-26\nR4DS(2e) 30\n\n\n\n[]1\nDownload GitKraken\n\nMarkdown Tutorial\n\n    \n\n\n\n\nWatch What is a Git repository?\n\nHomework 4\n\n    \n\n\n\nWatch What is a remote repository?\n\nFinal Project: Outline\n\n    \n\n\n\nHomework 5\n\n\n  \n  \n  \n    \n      1 Passcode: NA\n    \n  \n\n\n\n\n\n\nWeek 6: GitHub\n\n\n\n\n\n\n  \n    \n    \n      \n      Reading\n      Slides\n      Lecture\n      Assigned\n      Due\n    \n  \n  \n    Nov-02\nBryan 2017\n\n\n\n[]1\nRStudio Primer: Join Data Sets\n\nDownload GitKraken\n\n    \n\n\n\n\nCodecademy: Joining Tables in R\n\nWatch What is a Git repository?\n\n    \n\n\n\nHomework 6\n\nWatch What is a remote repository?\n\n    \n\n\n\nHomework 7\n\nHomework 5\n\n  \n  \n  \n    \n      1 Passcode: NA\n    \n  \n\n\n\n\n\n\nWeek 7: Mutating Joins\n\n\n\n\n\n\n  \n    \n    \n      \n      Reading\n      Slides\n      Lecture\n      Assigned\n      Due\n    \n  \n  \n    Nov-09\nR4DS(2e) 13\n\n\n\n[]1\nHomework 8\n\nRStudio Primer: Join Data Sets\n\n    \n\n\n\n\n\nCodecademy: Joining Tables in R\n\n    \n\n\n\n\nHomework 6\n\n    \n\n\n\n\nHomework 7\n\n  \n  \n  \n    \n      1 Passcode: NA\n    \n  \n\n\n\n\n\n\nWeek 8: Tidy Data\n\n\n\n\n\n\n  \n    \n    \n      \n      Reading\n      Slides\n      Lecture\n      Assigned\n      Due\n    \n  \n  \n    Nov-16\nR4DS(2e) 12\n\n\n\n[]1\nHomework 9\n\nHomework 8\n\n    \nWickham 2014\n\n\n\n\nFinal Project: Draft Data Script\n\n\n    \nR-Ladies Sydney CleanItUp 5\n\n\n\n\n\n    \nOptional: MD 4.2 - 4.4\n\n\n\n\n\n  \n  \n  \n    \n      1 Passcode: NA\n    \n  \n\n\n\n\n\n\nWeek 9: Factors & Pull Request\n\n\n\n\n\n\n  \n    \n    \n      \n      Reading\n      Slides\n      Lecture\n      Assigned\n      Due\n    \n  \n  \n    Nov-23\nR4DS(2e) 17\n\n\n\n[]1\nHomework 10\n\nHomework 9\n\n    \n\n\n\n\nFinal Project: Peer Review of Script\n\nFinal Project: Draft Data Script\n\n  \n  \n  \n    \n      1 Passcode: NA\n    \n  \n\n\n\n\n\n\nWeek 10: Presentations\n\n\n\n\n\n\n  \n    \n    \n      \n      Reading\n      Slides\n      Lecture\n      Assigned\n      Due\n    \n  \n  \n    Nov-30\n\n\n1\n\nHomework 10\n\n    \n\n\n\n\nFinal Project: Peer Review of Script\n\n    \n\n\n\n\nFinal Project: Presentation\n\n  \n  \n  \n    \n      1 Passcode: NA\n    \n  \n\n\n\n\n\n\nWeek 11: No class: Final papers due"
  },
  {
    "objectID": "installs.html",
    "href": "installs.html",
    "title": "Installs & Registration",
    "section": "",
    "text": "Please complete the following five items before our first class. Instructions for each are below."
  },
  {
    "objectID": "installs.html#install-r",
    "href": "installs.html#install-r",
    "title": "Installs & Registration",
    "section": "(1) Install R*",
    "text": "(1) Install R*\n\nhttps://cloud.r-project.org/\nInstall R from CRAN, the Comprehensive R Archive Network"
  },
  {
    "objectID": "installs.html#install-rstudio",
    "href": "installs.html#install-rstudio",
    "title": "Installs & Registration",
    "section": "(2) Install RStudio*",
    "text": "(2) Install RStudio*\n\nhttps://www.rstudio.com/products/rstudio/#Desktop\n* Note: If you have a pre-existing installation of R and/or RStudio, I strongly recommend that you reinstall both and get as current as possible. It can often be problematic to run old software.\nIf you upgrade R, you will need to update any packages you have installed. The command below should get you started, but you might also need to specify more arguments if you have been using a non-default library for your packages.\nupdate.packages(ask = FALSE, checkBuilt = TRUE)\nThis will only look for updates on CRAN. So if you use a package that lives only on GitHub or if you want a development version from GitHub, you will need to update it manually via devtools::install_github()"
  },
  {
    "objectID": "installs.html#register-a-github-account",
    "href": "installs.html#register-a-github-account",
    "title": "Installs & Registration",
    "section": "(3) Register a GitHub account",
    "text": "(3) Register a GitHub account\n\nhttps://github.com\nBefore you register for your free GitHub account, please read this username advice from Jenny Bryan."
  },
  {
    "objectID": "installs.html#install-git",
    "href": "installs.html#install-git",
    "title": "Installs & Registration",
    "section": "(4) Install Git",
    "text": "(4) Install Git\n\nhttps://www.git-scm.com/download\nBe sure to download the version of Git that is appropriate for your operating system (Mac, Windows, Linux).\nThat should give you an installer. (If you have a Mac and you’re having a hard time opening the installer, please see below.\nNote that Git is not like other software. You will not have an app to launch. To ensure the installation was successful, open RStudio after running the installer, go to:\nTools &gt; Terminal &gt; New Terminal\n\n\n\n\n\nThis will give you a new window down by your console.\n\n\n\n\n\nType the following into the terminal, then press enter: git --version (see highlighted box in image below)\n\n\n\n\n\nIf Git has been installed correctly, you should see output stating the version of Git that is installed on your machine. If you get this output, you are set for when we discuss git. If you do not get similar output please let me know before Week 7. It is critical that everyone be ready to go prior to class Week 7 so we don’t have to waste time in class on installation issues.\n\n\nSee below for issues related to Macs and permissions related to the developer\nIf you have a Mac\nYour computer will likely not trust the developer and you will get a message like the below when you try to run the installer.\n\n\n\n\n\nTo get around this, you’ll need to right click (Control + click) on the installer and select “Open”. Then you’ll be able to open and run the installer."
  },
  {
    "objectID": "installs.html#install-gitkraken",
    "href": "installs.html#install-gitkraken",
    "title": "Installs & Registration",
    "section": "(5) Install GitKraken",
    "text": "(5) Install GitKraken\n\nhttps://www.gitkraken.com/download"
  },
  {
    "objectID": "installs.html#install-rstudio-1",
    "href": "installs.html#install-rstudio-1",
    "title": "Installs & Registration",
    "section": "(2) Install RStudio* # <1>",
    "text": "(2) Install RStudio* # &lt;1&gt;\n\nhttps://www.rstudio.com/products/rstudio/#Desktop\n***Note*: If you have a pre-existing installation of R and/or RStudio, I strongly recommend that you reinstall both and get as current as possible. It can often be problematic to run old software.\nIf you upgrade R, you will need to update any packages you have installed. The command below should get you started, but you might also need to specify more arguments if you have been using a non-default library for your packages.\n\nFOOEY\n\nupdate.packages(ask = FALSE, checkBuilt = TRUE)\nThis will only look for updates on CRAN. So if you use a package that lives only on GitHub or if you want a development version from GitHub, you will need to update it manually via devtools::install_github()"
  },
  {
    "objectID": "installs.html#install-rstudio-go-in-the-margin",
    "href": "installs.html#install-rstudio-go-in-the-margin",
    "title": "Installs & Registration",
    "section": "(2) Install RStudio* Go in the margin?",
    "text": "(2) Install RStudio* Go in the margin?\n\nhttps://www.rstudio.com/products/rstudio/#Desktop\n***Note*: If you have a pre-existing installation of R and/or RStudio, I strongly recommend that you reinstall both and get as current as possible. It can often be problematic to run old software.\nIf you upgrade R, you will need to update any packages you have installed. The command below should get you started, but you might also need to specify more arguments if you have been using a non-default library for your packages.\n\n\nFOOEY\nupdate.packages(ask = FALSE, checkBuilt = TRUE)\nThis will only look for updates on CRAN. So if you use a package that lives only on GitHub or if you want a development version from GitHub, you will need to update it manually via devtools::install_github()"
  },
  {
    "objectID": "data_list.html",
    "href": "data_list.html",
    "title": "Data",
    "section": "",
    "text": "ais.xlsx\n  Download ais data  \n\n\nassessments.csv\n  Download assessments data  \n\n\necls-k_samp.sav\n  Download ecls-k_samp data  \n\n\nexam1.csv\n  Download exam1 data  \n\n\nFatality.txt\n  Download Fatality data  \n\n\nFemale.csv\n  Download Female data  \n\n\nhiv.csv\n  Download hiv data  \n\n\nincomeInequality_tidy.csv\n  Download incomeInequality_tidy data  \n\n\nlongitudinal_sim.csv\n  Download longitudinal_sim data  \n\n\nlongitudinal_sim2.csv\n  Download longitudinal_sim2 data  \n\n\nlotr_tidy.csv\n  Download lotr_tidy data  \n\n\nMale.csv\n  Download Male data  \n\n\nPenguins.csv\n  Download Penguins data  \n\n\nProject_Reads_Scores.csv\n  Download Project_Reads_Scores data  \n\n\nsesame13.sav\n  Download sesame13 data  \n\n\nstar.csv\n  Download star data  \n\n\nstudentAssessment.csv\n  Download studentAssessment data  \n\n\nstudentInfo.csv\n  Download studentInfo data  \n\n\nsummary_measure.sav\n  Download summary_measure data  \n\n\nsummary_measure.xlsx\n  Download summary_measure data  \n\n\nThe_Fellowship_Of_The_Ring.csv\n  Download The_Fellowship_Of_The_Ring data  \n\n\nThe_Return_Of_The_King.csv\n  Download The_Return_Of_The_King data  \n\n\nThe_Two_Towers.csv\n  Download The_Two_Towers data  \n\n\nyear-end_scores.csv\n  Download year-end_scores data"
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "Assignments",
    "section": "",
    "text": "As outlined in the Syllabus, most class meetings will include a homework assignment. Supplemental Learning platforms (RStudio Primers, R-Bootcamp, and Codecademy) will also be used as additional homework assignments, and the course will conclude with a final project. More detail about each is provided below.\nAssignments\n      Points\n    \n  \n  \n    Homeworks\n100\n    Supplementals\n100\n    Final Project\n200\n    Total\n400"
  },
  {
    "objectID": "assignments.html#homework-assignments",
    "href": "assignments.html#homework-assignments",
    "title": "Assignments",
    "section": "Homework Assignments",
    "text": "Homework Assignments\nEach homework assignment is worth 10 points, and require your “best honest effort”, which includes contact me me if you need help. Please do not turn in partial work. Instead, please ask for help and, if needed, an extension on the deadline.  \n\n\n\n\n\n\n  \n    \n    \n      Date Assigned\n      Date Due\n      Assigned\n      Key\n      Points\n    \n  \n  \n    Oct-04\nOct-11\nHomework 1\n\nKey HW_1\n\n10\n    Oct-11\nOct-18\nHomework 2\n\nKey HW_2\n\n10\n    Oct-11\nOct-18\nHomework 3\n\nKey HW_3\n\n10\n    Oct-18\nOct-25\nHomework 4\n\nKey HW_4\n\n10\n    Oct-25\nNov-01\nHomework 5\n\nKey HW_5\n\n10\n    Nov-01\nNov-08\nHomework 6\n\nKey HW_6\n\n10\n    Nov-01\nNov-08\nHomework 7\n\nKey HW_7\n\n10\n    Nov-08\nNov-15\nHomework 8\n\nKey HW_8\n\n10\n    Nov-15\nNov-22\nHomework 9\n\nKey HW_9\n\n10\n    Nov-22\nNov-29\nHomework 10\n\nKey HW_10\n\n10"
  },
  {
    "objectID": "assignments.html#supplemental-learning-assignments",
    "href": "assignments.html#supplemental-learning-assignments",
    "title": "Assignments",
    "section": "Supplemental Learning Assignments",
    "text": "Supplemental Learning Assignments\n\n\n\n\n\n\n  \n    \n    \n      Date Assigned\n      Date Due\n      Assigned\n      assign_type\n      Screenshot\n      Points\n    \n  \n  \n    Sep-27\nOct-04\nRStudio Primer: Programming basics\n\nNA\nTypes &gt; Character or object?\n\n10\n    Sep-27\nOct-04\nCodecademy: Introduction to R Syntax\n\nNA\n(example)\n\n10\n    Oct-04\nOct-11\nRStudio Primer: Data Visualization Basics\n\nNA\nA code template &gt; A graphing template\n\n10\n    Oct-04\nOct-11\nRbootcamp: Ch 2\n\nNA\npart 13\n\n10\n    Oct-04\nOct-11\nCodecademy: Introduction to Visualization with R\n\nNA\n(example)\n\n10\n    Oct-11\nOct-18\nRStudio Primer: Working with Tibbles\n\nNA\ntidyverse &gt; Quiz\n\n10\n    Oct-11\nOct-18\nRbootcamp: Ch 3\n\nNA\npart 21\n\n10\n    Oct-11\nOct-18\nCodecademy: Aggregates in R\n\nNA\n(example)\n\n10\n    Nov-01\nNov-08\nRStudio Primer: Join Data Sets\n\nNA\nMutating Joins &gt; Test your comprehension\n\n10\n    Nov-01\nNov-08\nCodecademy: Joining Tables in R\n\nNA\n(example)\n\n10"
  },
  {
    "objectID": "assignments.html#final-project",
    "href": "assignments.html#final-project",
    "title": "Assignments",
    "section": "Final Project",
    "text": "Final Project\n\n\n\n\n\n\n  \n    \n    \n      Date Assigned\n      Date Due\n      Assigned\n      Points\n    \n  \n  \n    Sep-27\nOct-25\nOutline\n15\n    Sep-27\nNov-22\nDraft Data Prep Script\n25\n    Sep-27\nNov-29\nPeer Review of Script\n25\n    Sep-27\nNov-29\nPresentation\n25\n    Sep-27\nDec-06\nPaper\n110\n  \n  \n  \n\n\n\n\n\nFinal Project\nThe final project in this class is a group project, requiring students use a “real world” dataset to write, essentially, a miniature manuscript, including an introduction (paragraph or two), methods, results, and discussion (again, maybe 2-3 paragraphs). Ideally, students would work with a dataset that includes variables they are interested in using beyond just this class; however, if students do not have access to a dataset, the instructor will provide one. Students who do not have access to data should plan to meet with the instructor as soon as possible so a dataset can be provided. Additionally, the dataset must be able to be shared publicly, as the full project will be required to be housed on GitHub and be fully reproducible. If making your data publicly available is a problem for you, please contact the instructor as soon as possible. We can work together to either find a dataset that will work for you, or simulate a dataset that is similar to the data you’d like to work with in reality (and then all your code should work for the real dataset, but you can share the simulated data with your classmates). Students are required to work in groups of 2-4 people. The final assignment is assigned during the first class, and groups must be finalized by the end of Week 2 (at which point students who have not self-selected into groups will be randomly assigned).\nI will investigate the commits made by different authors when evaluating the final project. If it is obvious that one person did not utilize GitHub, and instead added all of their contributions through a single or only a few commits, I will dock points from that individual. There should be numerous commits by each author, and they should be roughly even in terms of contribution activity (which GitHub has metrics to track, both in terms of the number of commits as well as the number of lines modified).  \n\n\nOutline (15 points)\nA basic outline of the final project is due at the end of Week 5. The outline should include a description of the data to be used, a discussion of what preparatory work will need to be done, and how the requirements of the final project will be met. The outline is intended to be low-stakes and is primarily designed to be a means for you to obtain feedback on the feasibility of the project and areas to consider.  \n\n\nDraft Data Preparation Script (25 points)\nAt the end of Week 8, you must have a draft of the data preparation complete, including moving the data from its raw to tidy form and a variety of exploratory data visualizations. Final project must use the following functions: pivot_longer(), select(), filter(), mutate(), pivot_wider(), group_by(), and summarize().  \n\n\nPeer Review of Data Preparation Script (25 points)\nFollowing the submission of the data preparation scripts, you will be assigned to review your peers’ code. The purpose of this exercise is to learn from each other. Programming is an immensely open-ended enterprise and there are lots of winding paths that all ultimately end up at the same destination. During your peer review, you must note (a) at least three areas of strength, (b) at least one thing you learned from reviewing their script, and (c) at least one and no more than three areas for improvement. Making your code publicly available can feel daunting. The purpose of this portion of the final project is to help us all learn from each other, not to denigrate. Under no circumstances will negative comments be tolerated. Any comments that could be perceived as negative, and outside the scope of the code, will result in an immediate score of zero. Be constructive in your feedback. Be kind. We are all learning.  \n\n\nFinal Project Presentation (25 points)\nEach group will present on their final project during Week 10, which is expected to still be in progress. These presentations are expected to be informal, and emphasize what learning occurred during the project. Specifically, the presentations are to commiserate with each other about the failures and challenges experienced along the way, while also celebrating the successes. Learning R is a difficult task, and we should all take solace knowing that others are struggling along with us. The final presentation should be equal parts “journey” and substantive findings/conclusions/results. Students are expected to present for approximately 10 minutes each (20-40 minutes per group), although the time may change depending on the enrollment of the class.  \n\n\n\n\n\n\n  \n    \n      Presentation Rubric\n    \n    \n    \n      Criteria\n      Points possible\n    \n  \n  \n    Challenges faced along the way\n5\n    Victories and things to celebrate\n5\n    Challenges you are still facing\n5\n    Substantive findings/interpretations\n5\n    Next R hurdle to tackle\n5\n    Total\n25\n  \n  \n  \n\n\n\n\n\n\nFinal Paper (110)\nThe purpose of the final project is to allow students an opportunity to demonstrate all the skills they have learned throughout the course. The final project must (a) be a reproducible and dynamic R Markdown document with references to the extant literature; (b) be housed on GitHub, with contributions from all authors obvious; (c) demonstrate moving data from its raw “messy” format to a tidy data format through the R Markdown file, but not in the final document; (d) include at least two exploratory data visualizations, and (e) include at least summary statistics of the data in tables, although fitted models of any sort are an added bonus (not literally, there are not extra points for fitting a model). The points for the final project are broken down as follows.  \n\n\n\n\n\n\n  \n    \n      Final Paper Rubric\n    \n    \n    \n      Criteria\n      Points Possible\n    \n  \n  \n    Writing\n\n\n    Abstract\n\n5\n    Introduction\n\n5\n    Methods\n\n5\n    Results\n\n5\n    Discussion\n\n5\n    References\n\n5\n    Code\n\n\n    Document is fully reproducible\n\n25\n    Demonstrate use of inline code\n\n5\n    At least two data visualizations\n\n10 (5 pts each)\n    Demonstrate tidying messy data using:\n\n\n    pivot_longer()\n\n5\n    mutate()\n\n5\n    select() and filter()\n\n5\n    pivot_wider()\n\n5\n    At least one table of descriptive statistics\n\n10\n    group_by()\n\n5\n    summarize()\n\n5\n    Total\n\n110"
  },
  {
    "objectID": "syllabus.html#student-learning-outcomes",
    "href": "syllabus.html#student-learning-outcomes",
    "title": "Syllabus",
    "section": "Student Learning Outcomes",
    "text": "Student Learning Outcomes\nBy the end of this course, students should be able to:\n\nUnderstand the R package ecosystem (how to find, install, load, and learn about package functionality)\nRead “flat” (i.e., rectangular) datasets into R\nPerform basic data wrangling and transformations in R, using the tidyverse\n\nLeverage appropriate functions for introductory data science tasks (pipeline)\n“clean up” the dataset using scripts and reproducible workflows\n\nUse version control with R via GitHub\nUse Quarto to create reproducible, dynamic reports\nUnderstand and create different types of data visualizations\n\n\nCourse Modality\nThis is an in-person course: that means that, unlike asynchronous online/ASYNC WEB courses, we will meet during scheduled class meeting times in (class location). I will accommodate absences as described in the Absences policy below. If you need additional flexibility, UO encourages you to consider ASYNC WEB courses. If you need accommodation related to a medical or other disability, you can request those by working with the Accessible Education Center."
  },
  {
    "objectID": "syllabus.html#course-reading-materials-and-resources",
    "href": "syllabus.html#course-reading-materials-and-resources",
    "title": "Syllabus",
    "section": "Course Reading Materials and Resources",
    "text": "Course Reading Materials and Resources\nAll required course readings are freely available online or will be provided by the instructor. Note that the assigned readings should be read before each class.\n\nBooks (required)\n\nWickham, H., Çetinkaya-Rundel, M., & Grolemund, G. (2023). R for data science. O’Reilly. (referred to as R4DS(2e) in the weekly schedule)\n\nFreely available online in the link above. A full-color paper copy is also available from Bookshop.org for (currently) $74.39.\n\n\n\nBooks (optional and possibly helpful)\n\nIsmay, C. and Kim, A. Y. (2021). Statistical Inference via Data Science: A ModernDive into R and the Tidyverse. (referred to as MD in the weekly schedule)"
  },
  {
    "objectID": "syllabus.html#resources",
    "href": "syllabus.html#resources",
    "title": "Syllabus",
    "section": "Resources",
    "text": "Resources\n\nSupplemental Learning\nThe best way to learn to use R is to be exposed to and use R, so in this course we will use some supplemental content developed outside this course. Specifically, we will be using some RStudio Primers, and R-Bootcamp.\n\nRStudio Primers\nWe will use some of the primers offered and developed by RStudio, mostly around introducing R programming, data visualization, and data cleaning in R. You will be working through:\n\nProgramming Basics,\nVisualization Basics,\nWorking with Tibbles, and\nJoin Data Sets.\n\n\n\nR-Bootcamp\nWe will be using some content from the R-Bootcamp course, developed by Ted Laderas and Jessica Minnier, to supplement lectures. R-Bootcamp offers an introduction to manipulating and visualizing data in R using the tidyverse suite of packages. You will be working through:\n\nChapter 2, and\nChapter 3.\n\n\n\nCodecademy\nWe will also be using some content from the Learn R course through Codecademy. You will need to sign up for a free account. Codecademy can be used as a place for you to practice/grow the skills you learn in class, and a resource for your own exploration of topics not covered by this class if you so choose. You will be working through:\n\nIntroduction: Introduction to R Syntax,\nFundamentals of Data Visualization with ggplot2: Introduction to Visualization with R,\nLearn R: Aggregates in R, and\nLearn R: Joining Tables in R\n\n\n\n\nHelpful People/Groups\n\nUO Libraries Data Services\nThe team at the UO Libraries’ Statistical Help Desk is here to assist you with everything from intermediate statistics-based coursework to dissertation-level analysis. They are available this term Monday through Friday 11am to 4pm with in-person support at the Knight Library DREAM Lab and by appointment (in person or via Zoom). They cover a wide array of topics, including introductory and advanced statistics, statistical software (like R and Python), research design, GIS, git/GitHub, Zotero, and qualitative software like Dedoose.\nIn addition to one-on-one assistance, they also provide a series of workshops. This term, workshops encompass a range of topics from introduction to R (!) and Python to effectively managing citations with Zotero. They also offer specialized workshops upon request, including qualitative data analysis and GitHub tutorials.\nThey host Friday lunch chats, Coffee + Data && Code that provide an opportunity for students and faculty to connect with like-minded peers from across the university. This term, they’re hosting a book club exploring How Statistics Revolutionized Science in the Twentieth Century and reading David Salsburg’s The Lady Tasting Tea: How Statistics Revolutionized Science in the Twentieth Century (such a fun read!).\n\n\nlearnR4free\nlearnR4free includes all sorts of resources (including books, videos, interactive websites, papers) to learn R for free.\n\n\nR-Ladies\nRegardless of how you identify, but particularly if you identify as a woman or gender non-binary, connect with the global R-Ladies organization. They are an excellent organization of incredibly supportive individuals who routinely share great information.\n\n\nRStudio Community\nThe RStudio community is similar to stackoverflow but is generally more friendly, willing to engage in more philosophical and deeper discussions than “how do you do X”, and more opinionated about workflows/software design. This last part is important because these discussions will generally be biased toward the {tidyverse} philosophy, and so it’s important that you understand that going in. However, this course is also biased toward the {tidyverse} philosophy, as I think it’s a good one. Stackoverflow is a very useful resource, but the RStudio community is a better place for beginners to post questions."
  },
  {
    "objectID": "syllabus.html#week-1-introduction",
    "href": "syllabus.html#week-1-introduction",
    "title": "Syllabus",
    "section": "Week 1: Introduction",
    "text": "Week 1: Introduction\n\n\n\n\n\n\n  \n    \n    \n      \n      Reading\n      Slides\n      Lecture\n      Assigned\n      Due\n    \n  \n  \n    Sep-28\nR4DS(2e) 5\n\n[]\n\n[]1\nA Quick Tour of the RStudio IDE2\nInstalls\n\n    \nR4DS(2e) 3\n\n[]\n\n\nRStudio Primer: Programming basics\n\n\n    \nR4DS(2e) 7\n\n\n\nCodecademy: Introduction to R Syntax\n\n\n    \nOptional: MD 1.1\n\n\n\nFinal Project\n\n\n  \n  \n  \n    \n      1 Passcode: NA\n    \n    \n      2 I do not rearrange my RStudio panes as he does."
  },
  {
    "objectID": "syllabus.html#week-2-workflow",
    "href": "syllabus.html#week-2-workflow",
    "title": "Syllabus",
    "section": "Week 2: Workflow",
    "text": "Week 2: Workflow\n\n\n\n\n\n\n  \n    \n    \n      \n      Reading\n      Slides\n      Lecture\n      Assigned\n      Due\n    \n  \n  \n    Oct-05\nProject-oriented Workflow\n\n\n\n[]1\nRStudio Primer: Data Visualization Basics\n\nA Quick Tour of the RStudio IDE\n\n    \nR4DS(2e) 29\n\n\n\n\nRbootcamp: Ch 2\n\nRStudio Primer: Programming basics\n\n    \nhere::here() Jenny Bryan\n\n\n\nCodecademy: Introduction to Visualization with R\n\nCodecademy: Introduction to R Syntax\n\n    \n{rio} vignette\n\n\n\nHomework 1\n\n\n  \n  \n  \n    \n      1 Passcode: NA"
  },
  {
    "objectID": "syllabus.html#week-3-ggplot2",
    "href": "syllabus.html#week-3-ggplot2",
    "title": "Syllabus",
    "section": "Week 3: {ggplot2}",
    "text": "Week 3: {ggplot2}\n\n\n\n\n\n\n  \n    \n    \n      \n      Reading\n      Slides\n      Lecture\n      Assigned\n      Due\n    \n  \n  \n    Oct-12\nR4DS(2e) 2\n\n\n\n[]1\nRStudio Primer: Working with Tibbles\n\nRStudio Primer: Data Visualization Basics\n\n    \nOptional: MD 2.0 to 2.9\n\n\n\n\nRbootcamp: Ch 3\n\nRbootcamp: Ch 2\n\n    \nOptional: Healy Ch 3\n\n\n\nCodecademy: Aggregates in R\n\nCodecademy: Introduction to Visualization with R\n\n    \n\n\n\nHomework 2\n\nHomework 1\n\n    \n\n\n\nHomework 3\n\nFinal Project: Finalize Groups\n\n  \n  \n  \n    \n      1 Passcode: NA"
  },
  {
    "objectID": "syllabus.html#week-4-dplyr",
    "href": "syllabus.html#week-4-dplyr",
    "title": "Syllabus",
    "section": "Week 4: {dplyr}",
    "text": "Week 4: {dplyr}\n\n\n\n\n\n\n  \n    \n    \n      \n      Reading\n      Slides\n      Lecture\n      Assigned\n      Due\n    \n  \n  \n    Oct-19\nR4DS(2e) 4\n\n\n\n[]1\nMarkdown Tutorial\n\nRStudio Primer: Working with Tibbles\n\n    \nOptional: MD 3.1 to 3.6, 3.8\n\n\n\n\nHomework 4\n\nRbootcamp: Ch 3\n\n    \n\n\n\n\nCodecademy: Aggregates in R\n\n    \n\n\n\n\nHomework 2\n\n    \n\n\n\n\nHomework 3\n\n  \n  \n  \n    \n      1 Passcode: NA"
  },
  {
    "objectID": "syllabus.html#week-5-rmarkdown",
    "href": "syllabus.html#week-5-rmarkdown",
    "title": "Syllabus",
    "section": "Week 5: RMarkdown",
    "text": "Week 5: RMarkdown\n\n\n\n\n\n\n  \n    \n    \n      \n      Reading\n      Slides\n      Lecture\n      Assigned\n      Due\n    \n  \n  \n    Oct-26\nR4DS(2e) 30\n\n\n\n[]1\nDownload GitKraken\n\nMarkdown Tutorial\n\n    \n\n\n\n\nWatch What is a Git repository?\n\nHomework 4\n\n    \n\n\n\nWatch What is a remote repository?\n\nFinal Project: Outline\n\n    \n\n\n\nHomework 5\n\n\n  \n  \n  \n    \n      1 Passcode: NA"
  },
  {
    "objectID": "syllabus.html#week-6-github",
    "href": "syllabus.html#week-6-github",
    "title": "Syllabus",
    "section": "Week 6: GitHub",
    "text": "Week 6: GitHub\n\n\n\n\n\n\n  \n    \n    \n      \n      Reading\n      Slides\n      Lecture\n      Assigned\n      Due\n    \n  \n  \n    Nov-02\nBryan 2017\n\n\n\n[]1\nRStudio Primer: Join Data Sets\n\nDownload GitKraken\n\n    \n\n\n\n\nCodecademy: Joining Tables in R\n\nWatch What is a Git repository?\n\n    \n\n\n\nHomework 6\n\nWatch What is a remote repository?\n\n    \n\n\n\nHomework 7\n\nHomework 5\n\n  \n  \n  \n    \n      1 Passcode: NA"
  },
  {
    "objectID": "syllabus.html#week-7-mutating-joins",
    "href": "syllabus.html#week-7-mutating-joins",
    "title": "Syllabus",
    "section": "Week 7: Mutating Joins",
    "text": "Week 7: Mutating Joins\n\n\n\n\n\n\n  \n    \n    \n      \n      Reading\n      Slides\n      Lecture\n      Assigned\n      Due\n    \n  \n  \n    Nov-09\nR4DS(2e) 13\n\n\n\n[]1\nHomework 8\n\nRStudio Primer: Join Data Sets\n\n    \n\n\n\n\n\nCodecademy: Joining Tables in R\n\n    \n\n\n\n\nHomework 6\n\n    \n\n\n\n\nHomework 7\n\n  \n  \n  \n    \n      1 Passcode: NA"
  },
  {
    "objectID": "syllabus.html#week-8-tidy-data",
    "href": "syllabus.html#week-8-tidy-data",
    "title": "Syllabus",
    "section": "Week 8: Tidy Data",
    "text": "Week 8: Tidy Data\n\n\n\n\n\n\n  \n    \n    \n      \n      Reading\n      Slides\n      Lecture\n      Assigned\n      Due\n    \n  \n  \n    Nov-16\nR4DS(2e) 12\n\n\n\n[]1\nHomework 9\n\nHomework 8\n\n    \nWickham 2014\n\n\n\n\nFinal Project: Draft Data Script\n\n\n    \nR-Ladies Sydney CleanItUp 5\n\n\n\n\n\n    \nOptional: MD 4.2 - 4.4\n\n\n\n\n\n  \n  \n  \n    \n      1 Passcode: NA"
  },
  {
    "objectID": "syllabus.html#week-9-factors-pull-request",
    "href": "syllabus.html#week-9-factors-pull-request",
    "title": "Syllabus",
    "section": "Week 9: Factors & Pull Request",
    "text": "Week 9: Factors & Pull Request\n\n\n\n\n\n\n  \n    \n    \n      \n      Reading\n      Slides\n      Lecture\n      Assigned\n      Due\n    \n  \n  \n    Nov-23\nR4DS(2e) 17\n\n\n\n[]1\nHomework 10\n\nHomework 9\n\n    \n\n\n\n\nFinal Project: Peer Review of Script\n\nFinal Project: Draft Data Script\n\n  \n  \n  \n    \n      1 Passcode: NA"
  },
  {
    "objectID": "syllabus.html#week-10-presentations",
    "href": "syllabus.html#week-10-presentations",
    "title": "Syllabus",
    "section": "Week 10: Presentations",
    "text": "Week 10: Presentations\n\n\n\n\n\n\n  \n    \n    \n      \n      Reading\n      Slides\n      Lecture\n      Assigned\n      Due\n    \n  \n  \n    Nov-30\n\n\n1\n\nHomework 10\n\n    \n\n\n\n\nFinal Project: Peer Review of Script\n\n    \n\n\n\n\nFinal Project: Presentation\n\n  \n  \n  \n    \n      1 Passcode: NA"
  },
  {
    "objectID": "syllabus.html#week-11-no-class-final-papers-due",
    "href": "syllabus.html#week-11-no-class-final-papers-due",
    "title": "Syllabus",
    "section": "Week 11: No class: Final papers due",
    "text": "Week 11: No class: Final papers due"
  },
  {
    "objectID": "syllabus.html#homework-200-points-50",
    "href": "syllabus.html#homework-200-points-50",
    "title": "Syllabus",
    "section": "Homework (200 points; 50%)",
    "text": "Homework (200 points; 50%)\n\nHomework Assignments (100 points)\nThere are 10 homework assignments during the course, which must be submitted to the instructor prior to the start of the following class. At 10 points per lab, these labs will be scored on a “best honest effort” basis, which generally implies zero or full credit (i.e., the assignment was or was not fully completed). However, many of the homework assignments require students complete specific portions before moving on to the next sections. If you find yourself stuck and unable to proceed, please contact the instructor for help rather than submitting incomplete work. Contacting the instructor is part of the “best honest effort”, and can result in full credit for an assignment even if the work is not fully complete. If the assignment is not complete, and the student has not contacted the instructor for help, it is likely to result is a score of zero.\n\n\nSupplemental Learning Platforms\n\nRStudio Primers, R-Bootcamp Chapters, & Codecademy-Learn R (100 points)\nIn addition to providing supplemental support, four RStudio Primers, two R-Bootcamp Chapters, and four Codecademy Lessons will be assigned and scored as part of homework at 10 points each. For the RStudio Primers and R-Bootcamp assignments you will submit a screenshot of a specific part of each lesson as evidence of completion (see below). For the Codecademy assignments you will submit a screenshot of the completed lesson with a black checkmark in a yellow circle on your syllabus page. This information is also in the Weekly Schedule.\n\nRStudio Primers Screenshot to submit (10 points each)\n\nProgramming Basics: screenshot of Types &gt; Character or object?\nVisualization Basics: screenshot of A code template &gt; A graphing template\nWorking with Tibbles: screenshot of tidyverse &gt; Quiz\nJoin Data Sets: screenshot of Mutating Joins &gt; Test your comprehension\n\n\n\nR-Bootcamp Screenshots to submit (10 points each)\n\nChapter 2: screenshot of part 13\nChapter 3: screenshot of part 21\nChapter 4: screenshot of part 7\n\n\n\nCodecademy Screenshots to submit (10 points each)\n\nIntroduction: Introduction to R Syntax: screenshot of completion checkmark (example)\nFundamentals of Data Visualization with ggplot2: Introduction to Visualization with R: screenshot of completion checkmark\nLearn R: Aggregates in R: screenshot of completion checkmark\nLearn R: Joining Tables in R: screenshot of completion checkmark"
  },
  {
    "objectID": "syllabus.html#final-project-200-points-50",
    "href": "syllabus.html#final-project-200-points-50",
    "title": "Syllabus",
    "section": "Final Project (200 points; 50%)",
    "text": "Final Project (200 points; 50%)\nThe final project in this class is a group project, requiring students use a “real world” dataset to write, essentially, a miniature manuscript, including an introduction (paragraph or two), methods, results, and discussion (again, maybe 2-3 paragraphs). Ideally, students would work with a dataset that includes variables they are interested in using beyond just this class; however, if students do not have access to a dataset, the instructor will provide one. Students who do not have access to data should plan to meet with the instructor as soon as possible so a dataset can be provided. Additionally, the dataset must be able to be shared publicly, as the full project will be required to be housed on GitHub and be fully reproducible. If making your data publicly available is a problem for you, please contact the instructor as soon as possible. We can work together to either find a dataset that will work for you, or simulate a dataset that is similar to the data you’d like to work with in reality (and then all your code should work for the real dataset, but you can share the simulated data with your classmates). Students are required to work in groups of 2-4 people. The final assignment is assigned during the first class, and groups must be finalized by the end of Week 2 (at which point students who have not self-selected into groups will be randomly assigned).\n\nOutline (15 points)\nA basic outline of the final project is due at the end of Week 5. The outline should include a description of the data to be used, a discussion of what preparatory work will need to be done, and how the requirements of the final project will be met. The outline is intended to be low-stakes and is primarily designed to be a means for you to obtain feedback on the feasibility of the project and areas to consider.\n\n\nDraft Data Preparation Script (25 points)\nAt the end of Week 8, you must have a draft of the data preparation complete, including moving the data from its raw to tidy form and a variety of exploratory data visualizations. Final project must use the following functions: pivot_longer(), select(), filter(), mutate(), pivot_wider(), group_by(), and summarize().\n\n\nPeer Review of Data Preparation Script (25 points)\nFollowing the submission of the data preparation scripts, you will be assigned to review your peers’ code. The purpose of this exercise is to learn from each other. Programming is an immensely open-ended enterprise and there are lots of winding paths that all ultimately end up at the same destination. During your peer review, you must note (a) at least three areas of strength, (b) at least one thing you learned from reviewing their script, and (c) at least one and no more than three areas for improvement. Making your code publicly available can feel daunting. The purpose of this portion of the final project is to help us all learn from each other, not to denigrate. Under no circumstances will negative comments be tolerated. Any comments that could be perceived as negative, and outside the scope of the code, will result in an immediate score of zero. Be constructive in your feedback. Be kind. We are all learning.\n\n\nFinal Project Presentation (25 points)\nEach group will present on their final project during Week 10, which is expected to still be in progress. These presentations are expected to be informal, and emphasize what learning occurred during the project. Specifically, the presentations are to commiserate with each other about the failures and challenges experienced along the way, while also celebrating the successes. Learning R is a difficult task, and we should all take solace knowing that others are struggling along with us. The final presentation should be equal parts “journey” and substantive findings/conclusions/results. Students are expected to present for approximately 10 minutes each (20-40 minutes per group), although the time may change depending on the enrollment of the class.\n\n\nFinal Paper (110)\nThe purpose of the final project is to allow students an opportunity to demonstrate all the skills they have learned throughout the course. The final project must (a) be a reproducible and dynamic R Markdown document with references to the extant literature; (b) be housed on GitHub, with contributions from all authors obvious; (c) demonstrate moving data from its raw “messy” format to a tidy data format through the R Markdown file, but not in the final document; (d) include at least two exploratory data visualizations, and (e) include at least summary statistics of the data in tables, although fitted models of any sort are an added bonus (not literally, there are not extra points for fitting a model). The points for the final project are broken down as follows.\n\n\n\n\n\n\n  \n    \n      Final Paper Rubric\n    \n    \n    \n      Criteria\n      Points Possible\n    \n  \n  \n    Writing\n\n\n    Abstract\n\n5\n    Introduction\n\n5\n    Methods\n\n5\n    Results\n\n5\n    Discussion\n\n5\n    References\n\n5\n    Code\n\n\n    Document is fully reproducible\n\n25\n    Demonstrate use of inline code\n\n5\n    At least two data visualizations\n\n10 (5 pts each)\n    Demonstrate tidying messy data using:\n\n\n    pivot_longer()\n\n5\n    mutate()\n\n5\n    select()`` and ``filter()\n\n5\n    pivot_wider()\n\n5\n    At least one table of descriptive statistics\n\n10\n    group_by()\n\n5\n    summarize()\n\n5\n    Total\n\n110\n  \n  \n  \n\n\n\n\nI will investigate the commits made by different authors when evaluating the final project. If it is obvious that one person did not utilize GitHub, and instead added all of their contributions through a single or only a few commits, I will dock points from that individual. There should be numerous commits by each author, and they should be roughly even in terms of contribution activity (which GitHub has metrics to track, both in terms of the number of commits as well as the number of lines modified)."
  },
  {
    "objectID": "syllabus.html#grading-components",
    "href": "syllabus.html#grading-components",
    "title": "Syllabus",
    "section": "Grading Components",
    "text": "Grading Components\n\n\n\n\n\n\n  \n    \n      Grading Components\n    \n    \n    \n      Lower %\n      Lower point range\n      Grade\n      Upper point range\n      Upper %\n    \n  \n  \n    97\n388\nA+\n\n\n    93\n372\nA\n384\n96\n    90\n360\nA-\n368\n92\n    87\n348\nB+\n356\n89\n    83\n332\nB\n344\n86\n    80\n320\nB-\n328\n82\n    77\n308\nC+\n316\n79\n    73\n292\nC\n304\n76\n    70\n280\nC-\n288\n72\n    \n\nF\n276\n69"
  },
  {
    "objectID": "syllabus.html#student-engagement-inventory",
    "href": "syllabus.html#student-engagement-inventory",
    "title": "Syllabus",
    "section": "Student Engagement Inventory",
    "text": "Student Engagement Inventory\nGraduate: 1 credit hour = 40 hours of student engagement (3 credit hours = 120 hours of student engagement).\n\n\n\n\n\n\n  \n    \n      Student Engagement Inventory\n    \n    \n    \n      Educational activity\n      Hours student engaged\n      Explanatory comments (if any):\n    \n  \n  \n    Course attendance\n28.33\n10 meetings at 170 minutes per meeting\n    Assigned readings\n15.67\nWeekly readings are assigned, and expected to take approximatley 1.5 hours each week\n    Projects\n36.00\nFinal project, as described above\n    Homework\n40.00\n10 Labs, at approximately 3 hours per lab spent out of class (20 hours), plus 4 Rstudio Primers, 3 R-Bootcamp Chapters, and 4 Codecademy Lessons at approximately 1 hour each (10 hours)\n    Total hours:\n120.00"
  },
  {
    "objectID": "syllabus.html#communicating-with-me-how-and-why",
    "href": "syllabus.html#communicating-with-me-how-and-why",
    "title": "Syllabus",
    "section": "Communicating with Me: How and Why",
    "text": "Communicating with Me: How and Why\nHow will I communicate with you? Our class will communicate through our Canvas site. Announcements and emails are archived there, automatically forwarded to your UO email, and can even reach you by text. Check and adjust your settings under Account &gt; Notifications.\nWhen I need to get in touch with individual students, I do so through email.\nWhen giving feedback on assignments, I do so in Canvas, and turnaround time for feedback is generally one week.\nHow can you communicate with me? If your question (or comment) is about a technical challenge with Canvas or another technology, please contact the UO Service Portal. IF it about course content or activities, about something personal, time sensitive, or something else that doesn’t feel like it fits above, please reach out to me by email. I try to respond to questions within one business day.\nWhy should you communicate with me? I enjoy talking with students about our course material! Are you confused or excited about something? Wondering how what we’re learning relates to current events, career choices, or other classes you can take UO? Please be in touch! Please also be in touch to tell me how you are doing in the course. If you are having trouble with some aspect of it, I would like to strategize with you. I believe every student can succeed in this course, and I care about your success."
  },
  {
    "objectID": "syllabus.html#classroom-community-expectations",
    "href": "syllabus.html#classroom-community-expectations",
    "title": "Syllabus",
    "section": "Classroom Community Expectations",
    "text": "Classroom Community Expectations\nParticipate and Contribute: All students are expected to participate by sharing ideas and contributing to the learning environment. This entails preparing, following instructions, and engaging respectfully and thoughtfully with others. While all students should participate, participation is not just talking, and a range of participation activities support learning. Participation might look like speaking aloud in the full class and in small groups as well as submitting questions prior to class or engaging with Discussion posts. We will establish more specific participation guidelines and criteria for contributions in our first weeks of the term.\nExpect and Respect Diversity: All classes at the University of Oregon welcome and respect diverse experiences, perspectives, and approaches. What is not welcome are behaviors or contributions that undermine, demean, or marginalize others based on race, ethnicity, gender, sex, age, sexual orientation, religion, ability, or socioeconomic status. We will value differences and communicate disagreements with respect. We may establish more specific guidelines and protocols to ensure inclusion and equity for all members of our learning community.\nHelp Everyone Learn: Part of how we learn together is by learning from one another. To do this effectively, we need to be patient with each other, identify ways we can assist others, and be open-minded to receiving help and feedback from others. Don’t hesitate to contact me to ask for assistance or offer suggestions that might help us learn better.\nGuidelines for using Canvas Discussion:\n\nUse subject lines that clearly communicate the content of your post - Write concisely, and be aware that humor or sarcasm doesn’t always translate in writing.\nBe supportive and considerate when replying to others’ posts. This means avoiding use of jargon or inappropriate language, and it means disagreeing with respect and providing clear rationale or evidence to support your different view.\n\nKeep focused on the topic and reference readings and other class materials to support your points (as applicable).\n\nTry to use correct spelling and grammar and proofread your submissions. After submitting, use the edit feature to make corrections and resubmit (don’t create a new or duplicate post that corrects your error)."
  },
  {
    "objectID": "syllabus.html#absences",
    "href": "syllabus.html#absences",
    "title": "Syllabus",
    "section": "Absences",
    "text": "Absences\nThis is a face-to-face course. Attendance is important because we will develop our knowledge through in-class activities that require your active engagement. We’ll have discussions, small-group activities, and do other work during class that will be richer for your presence, and that you won’t be able to benefit from if you are not there. Excessive absences make it impossible to learn well and succeed in the course. While there is not an automatic grade deduction for missing classes, it is unlikely that students who miss X or more classes will be able pass this course.\nWe know our UO community will still be navigating COVID-19, and some students will need to isolate and rest if they get COVID. Please take absences only when necessary, so when they are necessary, your prior attendance will have positioned you for success.\nAttendance at all class and discussion groups is expected and required. Students must contact the instructor in case of illness or emergencies that preclude attending class sessions. Messages can be left on the instructor’s e-mail at any time of the day or night, prior to class. If you are unable to complete an assignment due to a personal and/or family emergency, you should contact your instructor as soon as possible.\nIf you must miss a class please fill out the absence report form."
  },
  {
    "objectID": "syllabus.html#generative-artificial-intelligence-use",
    "href": "syllabus.html#generative-artificial-intelligence-use",
    "title": "Syllabus",
    "section": "Generative Artificial Intelligence Use",
    "text": "Generative Artificial Intelligence Use\nStudents can use GenAI tools in this class to help with course work and assignments. However, if you use a GenAI tool, you need to document your use, including the tool you use and when, where, and how in your work process you used it (for example: “I used ChatGPT to generate this part of my code, which I then revised before submitting”). In certain cases, as part of your documentation, I may ask you to submit any GenAI results you obtained, so you need to keep GenAI-created drafts and logs of your interactions with GenAI tools; failure to provide such documentation may result in a grade reduction in certain instances.\nAlong with documentation of your GenAI use, you are also required to cite GenAI if you use any GenAI-created content in your work submissions, for example text or images or graphics generated by GenAI tools. That is, you need to treat GenAI just like other sources such as books, articles, videos, etc."
  },
  {
    "objectID": "syllabus.html#children-in-class",
    "href": "syllabus.html#children-in-class",
    "title": "Syllabus",
    "section": "Children in Class",
    "text": "Children in Class\nI understand the difficulty in balancing academic, work, and family commitments and I want you to succeed. Here are my policies regarding children in class.\n\nAll breastfeeding babies are welcome in class as often as necessary.\nNon-nursing babies and older children are welcome whenever alternate arrangements cannot be made. As a parent, I understand that babysitters fall through, partners have conflicting schedules, and other issues arise that leave parents with few other options. Please do not bring a sick child into class.\nIn cases where children come to class, I invite parents/caregivers to sit close to the door so as to more easily excuse yourself to attend to your child’s needs. Non-parents in the class: please reserve seats near the door for your parenting classmates.\nAll students are expected to join with me in creating a welcoming environment that is respectful of your classmates who bring children to class.\n\nI understand that sleep deprivation and exhaustion are among the most difficult aspects of parenting young children. The struggle of balancing school, work, childcare, and graduate school is tiring, and I will do my best to accommodate any such issues while maintaining the same high expectations for all students enrolled in the class. Please do not hesitate to contact me with any questions or concerns."
  },
  {
    "objectID": "syllabus.html#using-pronouns-and-personal-preference",
    "href": "syllabus.html#using-pronouns-and-personal-preference",
    "title": "Syllabus",
    "section": "Using Pronouns and Personal Preference",
    "text": "Using Pronouns and Personal Preference\nPlease feel safe to share your pronouns, or the words you want to be called when people aren’t using your name. Like names, pronouns are an important part of how we identify that deserves to be respected. And I recognize that assuming someone’s gender can be hurtful, especially to members of our community who are transgender, genderqueer, or non-binary. As a community, we are all learning together about the importance of pronouns and being better allies to the trans community on campus. Please discuss the pronouns you wish to be used with me so I can address you respectfully. Please visit this university website for more information - https://studentlife.uoregon.edu/pronouns"
  },
  {
    "objectID": "syllabus.html#access-and-accommodations",
    "href": "syllabus.html#access-and-accommodations",
    "title": "Syllabus",
    "section": "Access and Accommodations",
    "text": "Access and Accommodations\nThe University of Oregon and I are dedicated to fostering inclusive learning environments for all students and welcomes students with disabilities into all of the University’s educational programs. The Accessible Education Center (AEC) assists students with disabilities in reducing campus-wide and classroom-related barriers. If you have or think you have a disability (https://aec.uoregon.edu/content/what-disability) and experience academic barriers, please contact the AEC to discuss appropriate accommodations or support. Visit 360 Oregon Hall or aec.uoregon.edu for more information. You can contact AEC at 541-346-1155 or via email at uoaec@uoregon.edu."
  },
  {
    "objectID": "syllabus.html#accommodation-for-religious-observances",
    "href": "syllabus.html#accommodation-for-religious-observances",
    "title": "Syllabus",
    "section": "Accommodation for Religious Observances",
    "text": "Accommodation for Religious Observances\nThe University of Oregon respects the right of all students to observe their religious holidays, and will make reasonable accommodations, upon request, for these observances. If you need to be absent from a class period this term because of a religious obligation or observance, please fill out the Student Religious Accommodation Request fillable PDF form and send it to me within the first weeks of the course so we can make arrangements in advance."
  },
  {
    "objectID": "syllabus.html#your-wellbeing",
    "href": "syllabus.html#your-wellbeing",
    "title": "Syllabus",
    "section": "Your Wellbeing",
    "text": "Your Wellbeing\nLife at college can be very complicated. Students often feel overwhelmed or stressed, experience anxiety or depression, struggle with relationships, or just need help navigating challenges in their life. If you’re facing such challenges, you don’t need to handle them on your own - there’s help and support on campus.\nAs your instructor if I believe you may need additional support, I will express my concerns, the reasons for them, and refer you to resources that might be helpful. It is not my intention to know the details of what might be bothering you, but simply to let you know I care and that help is available. Getting help is a courageous thing to do - for yourself and those you care about.\nUniversity Health Services help students cope with difficult emotions and life stressors. . If you need general resources on coping with stress or want to talk with another student who has been in the same place as you, visit the Duck Nest (located in the EMU on the ground floor) and get help from one of the specially trained Peer Wellness Advocates.\nUniversity Counseling Services (UCS) has a team of dedicated staff members to support you with your concerns, many of whom can provide identity-based support. All clinical services are free and confidential. Find out more at counseling.uoregon.edu or by calling 541-346-3227 (anytime UCS is closed, the After-Hours Support and Crisis Line is available by calling this same number)."
  },
  {
    "objectID": "syllabus.html#basic-needs",
    "href": "syllabus.html#basic-needs",
    "title": "Syllabus",
    "section": "Basic Needs",
    "text": "Basic Needs\nBeing able to meet your basic needs is foundational to your success as a student at the University of Oregon. If you are having difficulty affording food, don’t have a stable, safe place to live, or are struggling to meet another need, visit the UO Basic Needs Resource page for information on how to get support. They have information food, housing, healthcare, childcare, transportation, technology, finances (including emergency funds), and legal support.\nIf your need is urgent, please contact the Care and Advocacy Program by calling 541-346-3216, filling out the Community Care and Support form, or by scheduling an appointment with an advocate."
  },
  {
    "objectID": "syllabus.html#respect-for-diversity",
    "href": "syllabus.html#respect-for-diversity",
    "title": "Syllabus",
    "section": "Respect for Diversity",
    "text": "Respect for Diversity\nYou can expect to be treated with respect in this course. Both students and your instructor(s) enter with many identities, backgrounds, and beliefs. Students of all racial identities, ethnicities, genders, gender identities, gender expressions, national origins, religious affiliations, sexual orientations, citizenship statuses, ability and other visible and non-visible differences belong in and contribute to this class and this discipline. All students are expected to contribute to a respectful, welcoming and inclusive environment for every other member of the class.\nClass rosters are provided to instructors with students’ legal names. Please let me know if the name or pronouns I have for you are not accurate. It is important to me to address you properly.\nPlease let me know if aspects of the instruction, course design, or class activities undermine these principles in any way. You may also notify the [Home Department] at [contact information]. For additional assistance and resources, you may also consider contacting the Division of Equity and Inclusion through their website or by phone (at 541-346-3175), or the Center for Multicultural Academic Excellence through their website or by phone (at 541-346-3479)."
  },
  {
    "objectID": "syllabus.html#academic-integrity",
    "href": "syllabus.html#academic-integrity",
    "title": "Syllabus",
    "section": "Academic Integrity",
    "text": "Academic Integrity\nThe University Student Conduct Code defines academic misconduct, which includes using unauthorized help on assignments and examinations, the use of sources without acknowledgment, and recording class without “the express written permission of the instructor(s).” Academic misconduct is prohibited at UO. I will report all suspected misconduct to the Office of Student Conduct and Community Standards. If the Office finds a student has committed misconduct, consequences can include of the relevant assignment or exam, or of the course.\nWhile unauthorized help and use of sources without citation is prohibited, learning together and citing sources is crucial! Each assignment and assessment will have a note about whether and how you might work with others so that you can clearly act with academic integrity. All assignments will use APA citation (preferred), and you can find support in using [citation method] at the UO Libraries’ Citation Guides research guide.\nIf at any point in the term you are unsure about whether a behavior aligns with academic integrity in our course, please contact me. I view student questions about academic integrity as a desire to act with integrity, so I welcome your questions."
  },
  {
    "objectID": "syllabus.html#student-experience-surveys",
    "href": "syllabus.html#student-experience-surveys",
    "title": "Syllabus",
    "section": "Student Experience Surveys",
    "text": "Student Experience Surveys\nThe midway and end-of-term Student Experience Surveys will be conducted in class on [insert dates. These happen during week four, then week 10]. These are important opportunities to provide feedback about your learning experiences. I value this feedback and am continually improving the course with students’ responses in mind. The key parts of the survey are the open-ended questions where you share concrete, actionable feedback and about the teaching practices that stand out to you. Thank you for your thoughtful reflections!"
  },
  {
    "objectID": "syllabus.html#reporting-obligations",
    "href": "syllabus.html#reporting-obligations",
    "title": "Syllabus",
    "section": "Reporting Obligations",
    "text": "Reporting Obligations\nI am a designated reporter. For information about my reporting obligations as an employee, please see Employee Reporting Obligations on the Office of Investigations and Civil Rights Compliance (OICRC) website. Students experiencing sex or gender-based discrimination, harassment or violence should call the 24-7 hotline 541-346-SAFE [7244] or visit safe.uoregon.edu for help. Students experiencing all forms of prohibited discrimination or harassment may contact the Dean of Students Office at 5411-346-3216 or the non-confidential Title IX Coordinator/OICRC at 541-346-3123. Additional resources are available at UO’s How to Get Support webpage.\nI am also a mandatory reporter of child abuse. Please find more information at Mandatory Reporting of Child Abuse and Neglect."
  },
  {
    "objectID": "syllabus.html#conflict-resolution",
    "href": "syllabus.html#conflict-resolution",
    "title": "Syllabus",
    "section": "Conflict Resolution",
    "text": "Conflict Resolution\nSeveral options, both informal and formal, are available to resolve conflicts for students who believe they have been subjected to or have witnessed bias, unfairness, or other improper treatment.\nIt is important to exhaust the administrative remedies available to you including discussing the conflict with the specific individual, contacting the Department Head, or within the College of Education, fall term you can contact the Associate Dean for Academic Affairs, Sylvia Thompson, (541) 346-2483, sthomps5@uoregon.edu. Outside the College, you can contact:\n\nUO Bias Response Team: 346-3216\n\nConflict Resolution Services: 346-3216\nAffirmative Action and Equal Opportunity: 346-3123"
  },
  {
    "objectID": "syllabus.html#grievance-policy",
    "href": "syllabus.html#grievance-policy",
    "title": "Syllabus",
    "section": "Grievance Policy",
    "text": "Grievance Policy\nA student or group of students of the College of Education may appeal decisions or actions pertaining to admissions, programs, evaluation of performance and program retention and completion. Students who decide to file a grievance should follow University student grievance procedures (https://policies.uoregon.edu/grievance-procedures) and/or consult with the College Associate Dean for Academic Affairs (Sylvia Thompson, 541-346-2483, sthomps5@uoregon.edu). &lt;br"
  },
  {
    "objectID": "syllabus.html#academic-disruption-due-to-campus-emergency",
    "href": "syllabus.html#academic-disruption-due-to-campus-emergency",
    "title": "Syllabus",
    "section": "Academic Disruption due to Campus Emergency",
    "text": "Academic Disruption due to Campus Emergency\nIn the event of a campus emergency that disrupts academic activities, course requirements, deadlines, and grading percentages are subject to change. Information about changes in this course will be communicated as soon as possible by email, and on Canvas. If we are not able to meet face-to-face, students should immediately log onto Canvas and read any announcements and/or access alternative assignments. Students are also expected to continue coursework as outlined in this syllabus or other instructions on Canvas."
  },
  {
    "objectID": "syllabus.html#inclement-weather",
    "href": "syllabus.html#inclement-weather",
    "title": "Syllabus",
    "section": "Inclement Weather",
    "text": "Inclement Weather\nIt is generally expected that class will meet unless the University is officially closed for inclement weather. If it becomes necessary to cancel class while the University remains open, this will be announced on Canvas and by email. Updates on inclement weather and closure are also communicated as described on the Inclement Weather webpage."
  },
  {
    "objectID": "syllabus.html#course-incomplete-policy",
    "href": "syllabus.html#course-incomplete-policy",
    "title": "Syllabus",
    "section": "Course Incomplete Policy",
    "text": "Course Incomplete Policy\nStudents are expected to be familiar with university policy regarding grades of “incomplete” and the timeline for completion. For details on the policy and procedures regarding incompletes, Please see: https://education.uoregon.edu/academics/incompletes-courses"
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "Syllabus",
    "section": "",
    "text": "Term: Fall 2023"
  },
  {
    "objectID": "syllabus.html#indigenous-recognition-statement",
    "href": "syllabus.html#indigenous-recognition-statement",
    "title": "Syllabus",
    "section": "Indigenous Recognition Statement",
    "text": "Indigenous Recognition Statement\nThe University of Oregon is located on Kalapuya Ilihi, the traditional indigenous homeland of the Kalapuya people. Today, descendants are citizens of the Confederated Tribes of the Grand Ronde Community of Oregon and the Confederated Tribes of the Siletz Indians of Oregon, and they continue to make important contributions in their communities, at UO, and across the land we now refer to as Oregon."
  },
  {
    "objectID": "nopublish/popcorn/popcorn-experiment.html",
    "href": "nopublish/popcorn/popcorn-experiment.html",
    "title": "The Great Popcorn Experiment!",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(here)\nlibrary(ggthemes)\nlibrary(ggrepel)\nlibrary(reactable)\nlibrary(parameters)\nlibrary(knitr)\n\ntheme_set(theme_minimal(base_size = 18))\n\n\n\nIntroduction\nThis is the great popcorn experiment! An under-powered (mediocre) scientific replication of the famous historical event (folktale?) in statistics in which each person in town was asked to guess the weight of the ox. Having no knowledge of oxen, no person correctly guessed the weight, but the average of all guesses was within one pound of the ox’s weight! What an inspiring story of collectivism, the strength in numbers, and the power of data, data science, and statistics! We are better together.\n\n\nCode\ntruth &lt;- 3224\n\ndta &lt;- read_csv(here(\"nopublish\", \"popcorn\", \"popcorn_data.csv\")) %&gt;% \n  mutate(id = ifelse(uo_id %% 2 == 0, \"even\", \"odd\"),\n         initials = paste0(str_sub(first, 1, 1), str_sub(last, 1, 2)),\n         dist = guess - truth) %&gt;% \n  select(-uo_id)\n\nansw &lt;- tibble(\n  name = c(\"Class Mean\", \"Truth\"),\n  value = c(round(mean(dta$guess, na.rm = TRUE)), truth)\n)\n\n\n\n\nMethod\nWe used the following packages: ggrepel (Slowikowski 2023), ggthemes (Arnold 2021), here (Müller 2020), knitr (Xie 2023), parameters (Lüdecke et al. 2020), reactable (Lin 2023), and tidyverse (Wickham et al. 2019).\n\nResearch Question\n\nIs the average of the class’s popcorn guesses closer to the actual number of popcorn kernels in the jar than any one person?\n\nOur hypothesis is that the class average will be more accurate than the guess of any one person.\n\n\n\nResults\nFirst, let’s look at a density plot, which shows the distribution of the class guesses.\n\n\nCode\ndta %&gt;% \n  ggplot(aes(guess)) +\n  geom_density() +\n  geom_vline(xintercept = truth, color = \"magenta\", size = 2) +\n  geom_vline(xintercept = mean(dta$guess, na.rm = TRUE), size = 2) +\n  ggrepel::geom_label_repel(data = answ, aes(x = value, y = .0005, label = name)) +\n  theme(plot.title.position = \"plot\",\n        axis.text.y = element_blank()) +\n  labs(\n    x = \"Class Guesses\",\n    y = NULL,\n    title = \"Class Guesses\",\n    subtitle = \"Density Plot\"\n  )\n\n\n\n\n\nAnd here is a table of the class guesses. You can filter and sort it!\n\n\nCode\ndta %&gt;% \n  select(first, guess) %&gt;% \n  reactable(filterable = TRUE, searchable = TRUE)\n\n\n\n\n\n\n\nHere is another cool data visualization.\n\n\nCode\ndta %&gt;% \n  ggplot(aes(guess, reorder(first, guess), group = 1)) +\n  geom_point(size = 2.5) +\n  geom_segment(aes(x = 0, xend = guess, y = first, yend = first), color = \"cornflowerblue\") +\n  geom_vline(xintercept = truth, color = \"magenta\", size = 2) +\n  geom_vline(xintercept = mean(dta$guess, na.rm = TRUE), size = 2) +\n  geom_label_repel(data = answ, aes(x = value, y = 2, label = name)) +\n  theme(plot.title.position = \"plot\") +\n  labs(\n    x = \"Class Guesses\",\n    y = NULL,\n    title = \"A Cool Figure\"\n  )\n\n\n\n\n\nOr perhaps my favorite:\n\n\nCode\ndta %&gt;% \n  ggplot(aes(dist, reorder(first, dist))) +\n  geom_col(aes(fill = ifelse(dist &gt; 0, \"plus\", \"minus\"))) +\n  geom_vline(xintercept = 0, color = \"magenta\", size = .5) +\n  geom_vline(xintercept = mean(dta$guess, na.rm = TRUE) - truth, size = 2) +\n  ggrepel::geom_label_repel(data = filter(answ, name == \"Class Mean\"), \n                            aes(x = value - truth, y = -1, label = name),\n                            min.segment.length = 0) +\n  ggthemes::scale_fill_colorblind() +\n  theme(legend.position=\"none\",\n        plot.title.position = \"plot\") +\n  labs(\n    x = \"Guesses Distance from Truth\",\n    y = NULL,\n    title = \"Distance from Truth\"\n  )\n\n\n\n\n\nNow let’s get to the results…\nThe actual number of popcorn kernels in the jar was 3,224.\nThe person closest to the truth was Alejandra with a guess of 3,267 kernels - off by 43 kernels!\nThe class mean was 2,336 (SD = 965) - off by 888 kernels.\nSo to answer our research question…\n\nCode\nif(abs(mean(dta$guess, na.rm = TRUE) - truth) &lt; abs(slice(dta, which.min(abs(dist))) %&gt;% pull(guess) - truth)) {\n   cat(\"Hypothosis confirmed! The class average was more accurate than any one person!\")\n} else if (abs(mean(dta$guess, na.rm = TRUE) - truth) &gt; abs(slice(dta, which.min(abs(dist))) %&gt;% pull(guess) - truth)) {\n   cat(paste0(\"**Hypthosis rejected! \", slice(dta, which.min(abs(dist))) %&gt;% pull(first), \"'s guess was closer than the class average! Replication crisis?**\")) \n} else if (abs(mean(dta$guess, na.rm = TRUE) - truth) == abs(slice(dta, which.min(abs(dist))) %&gt;% pull(guess) - truth)) {\n  cat(paste0(\"What?! It was a tie! \", slice(dta, which.min(abs(dist))) %&gt;% pull(first), \"'s guess was the same as the class average!\"))\n}\n\nHypthosis rejected! Alejandra’s guess was closer than the class average! Replication crisis?\n\n\nDiscussion\nWait! I’m having fun with this, so let’s look at major and ID number!\n\n\nCode\ndta_smry &lt;- dta %&gt;% \n  group_by(major) %&gt;% \n  summarize(mean_guess = mean(guess, na.rm = TRUE))\n\nggplot(dta, aes(guess, fct_reorder(major, guess), group = major)) +\n  geom_point() +\n  stat_summary(fun = \"mean\", \n               geom = \"crossbar\",\n               width = .5,\n               color = \"red\") +\n  geom_vline(xintercept = truth, color = \"magenta\", size = 1) +\n  labs(\n    x = \"Kernel Guess\",\n    y = \"Major\",\n    title = \"Guesses by Major\"\n  ) +\n  theme(plot.title.position = \"plot\")\n\n\n\n\n\n\n\nCode\nggplot(dta, aes(guess, id, group = id)) +\n  geom_point() +\n  stat_summary(fun = \"mean\", \n               geom = \"crossbar\",\n               width = .5,\n               color = \"red\") +\n  geom_vline(xintercept = truth, color = \"magenta\", size = 1) +\n  labs(\n    x = \"UO ID\",\n    y = \"Kernel Guess\",\n    title = \"Guesses by UO ID\"\n  ) +\n  theme(plot.title.position = \"plot\")\n\n\n\n\n\nLet’s run (bad) a regression!\n\n\nCode\nm1 &lt;- lm(dist ~ major + id, data = dta)\n\nmodel_parameters(m1) %&gt;%\n  as_tibble() %&gt;% \n  select(-c(CI, df_error, t)) %&gt;% \n  mutate(across(c(2:5), ~round(., 1)),\n         p = round(p, 3)) %&gt;% \n  kable(booktabs = TRUE,\n        align = c(\"l\", \"r\", \"r\", \"r\", \"r\", \"r\"),\n        caption = \"These are the Regression Results\")\n\n\n\nThese are the Regression Results\n\n\nParameter\nCoefficient\nSE\nCI_low\nCI_high\np\n\n\n\n\n(Intercept)\n-351.7\n830.3\n-2132.7\n1429.2\n0.678\n\n\nmajorCMSD\n860.2\n880.9\n-1029.1\n2749.6\n0.345\n\n\nmajorEPLD\n1573.0\n1069.8\n-721.5\n3867.5\n0.164\n\n\nmajorESSP\n-1277.3\n1123.3\n-3686.4\n1131.9\n0.275\n\n\nmajorMPA\n-1753.3\n1123.3\n-4162.4\n655.9\n0.141\n\n\nmajorPRVD\n-375.1\n862.9\n-2225.9\n1475.6\n0.670\n\n\nmajorPS\n1791.0\n1069.8\n-503.5\n4085.5\n0.116\n\n\nmajorPSY\n-69.8\n821.9\n-1832.6\n1693.0\n0.933\n\n\nmajorSOC\n839.9\n942.2\n-1180.9\n2860.6\n0.388\n\n\nmajorSPED\n-182.4\n862.9\n-2033.1\n1668.4\n0.836\n\n\nidodd\n-1092.3\n342.4\n-1826.6\n-357.9\n0.007\n\n\n\n\n\n\n\n\n\n\n\n\n\nReferences\n\nArnold, Jeffrey B. 2021. Ggthemes: Extra Themes, Scales and Geoms for ’Ggplot2’. https://CRAN.R-project.org/package=ggthemes.\n\n\nLin, Greg. 2023. Reactable: Interactive Data Tables for r. https://CRAN.R-project.org/package=reactable.\n\n\nLüdecke, Daniel, Mattan S. Ben-Shachar, Indrajeet Patil, and Dominique Makowski. 2020. “Extracting, Computing and Exploring the Parameters of Statistical Models Using R.” Journal of Open Source Software 5 (53): 2445. https://doi.org/10.21105/joss.02445.\n\n\nMüller, Kirill. 2020. Here: A Simpler Way to Find Your Files. https://CRAN.R-project.org/package=here.\n\n\nSlowikowski, Kamil. 2023. Ggrepel: Automatically Position Non-Overlapping Text Labels with ’Ggplot2’. https://CRAN.R-project.org/package=ggrepel.\n\n\nWickham, Hadley, Mara Averick, Jennifer Bryan, Winston Chang, Lucy D’Agostino McGowan, Romain François, Garrett Grolemund, et al. 2019. “Welcome to the tidyverse.” Journal of Open Source Software 4 (43): 1686. https://doi.org/10.21105/joss.01686.\n\n\nXie, Yihui. 2023. Knitr: A General-Purpose Package for Dynamic Report Generation in r. https://yihui.org/knitr/."
  }
]